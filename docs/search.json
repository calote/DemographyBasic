[{"path":"https://DemographyBasic.github.io/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 DemographyBasic authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://DemographyBasic.github.io/articles/introduction.html","id":"instalation","dir":"Articles","previous_headings":"","what":"Instalation","title":"Introduction to DemographyBasic","text":"","code":"# Instalar el paquete desde GitHub install.packages(\"remotes\") remotes::install_github(\"calote/DemographyBasic\")"},{"path":"https://DemographyBasic.github.io/articles/introduction.html","id":"use","dir":"Articles","previous_headings":"","what":"Use","title":"Introduction to DemographyBasic","text":"","code":"#library(DemographyBasic) suppressWarnings(suppressMessages(library(DemographyBasic)))"},{"path":"https://DemographyBasic.github.io/articles/introduction.html","id":"example-lifetable","dir":"Articles","previous_headings":"Use","what":"Example lifetable","title":"Introduction to DemographyBasic","text":"basic example shows solve common problem: present results abridged life table friendly way, can use DemBas_presentadf function:","code":"library(DemographyBasic) (mx0 = 1733/441881) # TMI = D^t_0/N^t  #> [1] 0.00392187 # Defunciones de menores de un año durante 2003: 1733 # Nacimientos en España en 2003: 441881 mx = c(mx0,0.00027, 0.00013, 0.00016, 0.00043, 0.00057, 0.00059, 0.00081,      0.00115, 0.00174, 0.00258, 0.00376, 0.00569, 0.00818, 0.01346,      0.02206, 0.03844, 0.06981, 0.12872, 0.21674, 0.31705, 0.48258) tv = DemBas_tablavida_abreviada(mx,) tv #> # A tibble: 22 × 11 #>    Edad      n nMx1000     nqx   npx     lx   ndx    nLx      Tx    ex    Sx #>    <chr> <dbl>   <dbl>   <dbl> <dbl>  <dbl> <dbl>  <dbl>   <dbl> <dbl> <dbl> #>  1 0         1    3.92 0.00391 0.996 100000   391  99726 7959151  79.6 0.996 #>  2 1         4    0.27 0.00108 0.999  99609   108 398219 7859425  78.9 0.999 #>  3 5         5    0.13 0.00065 0.999  99501    65 497344 7461205  75.0 0.999 #>  4 10        5    0.16 0.0008  0.999  99436    80 496983 6963862  70.0 0.999 #>  5 15        5    0.43 0.00215 0.998  99357   213 496251 6466879  65.1 0.998 #>  6 20        5    0.57 0.00285 0.997  99144   282 495012 5970628  60.2 0.997 #>  7 25        5    0.59 0.00295 0.997  98861   291 493579 5475615  55.4 0.997 #>  8 30        5    0.81 0.00404 0.996  98570   398 491855 4982037  50.5 0.995 #>  9 35        5    1.15 0.00573 0.994  98172   563 489451 4490182  45.7 0.993 #> 10 40        5    1.74 0.00866 0.991  97609   846 485931 4000731  41.0 0.989 #> # ℹ 12 more rows DemBas_presentadf(tv)"},{"path":"https://DemographyBasic.github.io/articles/introduction.html","id":"example-of-lifetable-simple","dir":"Articles","previous_headings":"Use","what":"Example of lifetable simple","title":"Introduction to DemographyBasic","text":"present results abridged life table friendly way, can use DemBas_presentadf function:","code":"Mx1000 = c(9.12160, 0.84807,0.49502,0.33352,0.27296, 0.23258,0.20229,0.19221,0.19225,0.18219, 0.18219,0.18223,0.19239,0.21268,0.25325, 0.31411,0.38518,0.44618,0.47682,0.48721, 0.48744,0.48768,0.48792,0.48816,0.48840, 0.48864,0.49907,0.49932,0.49957,0.51002, 0.52049,0.55140,0.58236,0.62360,0.67515, 0.72681,0.79907,0.89203,0.99549,1.09927, 1.22398,1.35944,1.50578,1.68380,1.87305, 2.07374,2.28609,2.52075,2.76762,3.04801, 3.34149,3.64844,3.99052,4.35799,4.76231, 5.19386,5.68611,6.20842,6.79514,7.42672, 8.12774,8.89053,9.74129,10.68500,11.73947, 12.91226,14.22468,15.71228,17.35403,19.16595, 21.20612,23.43628,25.96366,28.83038,32.10259, 35.83456,40.09691,44.96477,50.47392,56.71130, 63.73696,71.61161,80.38833,90.15169,100.87032, 112.56462,125.25733,138.92967,153.57492,169.22923, 185.87183,203.41806,222.05303,241.69867,262.24030, 283.83279,306.41026,329.80973,354.16667,379.65616, 406.15058,434.57189,462.12121,491.86992,832.50000) mx = Mx1000/1000 tb01 = DemBas_tablavida_completa(mx) tb01 #> # A tibble: 105 × 10 #>    Edad  Mx1000      qx    px     lx    dx    Lx      Tx    ex    Sx #>    <chr>  <dbl>   <dbl> <dbl>  <dbl> <dbl> <dbl>   <dbl> <dbl> <dbl> #>  1 0      9.12  0.00908 0.991 100000   908 99364 7826402  78.3 0.997 #>  2 1      0.848 0.00085 0.999  99092    84 99042 7727038  78.0 0.999 #>  3 2      0.495 0.00049 1.00   99008    49 98983 7627996  77.0 1.00  #>  4 3      0.334 0.00033 1.00   98959    33 98942 7529013  76.1 1.00  #>  5 4      0.273 0.00027 1.00   98926    27 98912 7430070  75.1 1.00  #>  6 5      0.233 0.00023 1.00   98899    23 98887 7331158  74.1 1.00  #>  7 6      0.202 0.0002  1.00   98876    20 98866 7232270  73.1 1.00  #>  8 7      0.192 0.00019 1.00   98856    19 98846 7133404  72.2 1.00  #>  9 8      0.192 0.00019 1.00   98837    19 98827 7034558  71.2 1.00  #> 10 9      0.182 0.00018 1.00   98818    18 98809 6935730  70.2 1.00  #> # ℹ 95 more rows DemBas_presentadf(tb01)"},{"path":"https://DemographyBasic.github.io/articles/introduction.html","id":"example-of-pyramids-with-porcentages","dir":"Articles","previous_headings":"Use","what":"Example of pyramids with porcentages","title":"Introduction to DemographyBasic","text":"","code":"load(file = system.file(\"examples/04003px.RData\", package = \"DemographyBasic\"))  ano_selec = 2020 Espanoles_Extranjeros = \"Españoles\"  CCAA_Prov = \"Sevilla\"  datosPiramide =  datos |>    dplyr::filter(Ano == ano_selec &                    Sexo %in% c(\"Mujeres\", \"Hombres\") &                    Edad != \"TOTAL\" &                    CCAA.Prov == CCAA_Prov &                   Espanoles.Extranjeros == Espanoles_Extranjeros) |>    dplyr::rename(Poblacion = value) |>    dplyr::select(Edad, Sexo, Poblacion)  (g_pir1 = DemBas_piramidePorc(datosPiramide,                              Gtitulo = \"Pirámide Población de la provincia de Sevilla\",                             Gsubtitulo = \"Año 2020  (españoles)\",                             GSegmentos = FALSE))"},{"path":"https://DemographyBasic.github.io/articles/introduction.html","id":"example-of-import-px-file","dir":"Articles","previous_headings":"Use","what":"Example of import px file","title":"Introduction to DemographyBasic","text":"function DemBas_read_px2() used read px files. example, read file 9663.px located examples folder DemographyBasic package, can :","code":"dfej02a <- DemBas_read_px2(system.file(\"examples/9663.px\", package = \"DemographyBasic\")) head(dfej02a) #>               Periodo        Sexo Edad.simple    value #> 1  1 de julio de 2018 Ambos sexos       Total 46733038 #> 2 1 de enero de  2018 Ambos sexos       Total 46658447 #> 3  1 de julio de 2017 Ambos sexos       Total 46532869 #> 4 1 de enero de  2017 Ambos sexos       Total 46527039 #> 5  1 de julio de 2016 Ambos sexos       Total 46449874 #> 6 1 de enero de  2016 Ambos sexos       Total 46440099"},{"path":"https://DemographyBasic.github.io/articles/introduction.html","id":"example-of-pyramids-with-segments","dir":"Articles","previous_headings":"Use","what":"Example of pyramids with segments","title":"Introduction to DemographyBasic","text":"","code":"tp1 = dfej02a %>%    dplyr::filter(Periodo==\"1 de enero de  2017\",Edad.simple==\"Total\") %>%     # hay dos espacios entre \"de\" y \"2017\"   dplyr::select(\"Sexo\",\"value\")  PV = round(tp1$value[tp1$Sexo==\"Hombres\"]/tp1$value[tp1$Sexo==\"Ambos sexos\"],            4)*100 #### España a 1 de enero de 2017.  x1 = as.character(DemBas_extrae_codigo_provincia(dfej02a$Edad.simple)) x1n = as.numeric(x1) #> Warning: NAs introduced by coercion  x1ngr = DemBas_agrupar_variable(x1n,metodo=2,final=100)  dfej02a$EdadGrupos = x1ngr  tp3 = dfej02a %>%    dplyr::filter( Periodo==\"1 de enero de  2017\",                   !(Edad.simple %in% c(\"100 y más años\",\"Total\"))) %>%    dplyr::group_by(Sexo,EdadGrupos) %>%    dplyr::summarise(Poblacion = round(sum(value,na.rm=T),0), .groups = \"keep\")   dfPir2017 = dfej02a %>%    dplyr::filter( Periodo==\"1 de enero de  2017\",                   !(Sexo==\"Ambos sexos\"),                  !(Edad.simple %in% c(\"100 y más años\",\"Total\"))) %>%    dplyr::select(Edadchar=Edad.simple,                 Sexo,                 Poblacion = value) dfPir2017$Edad = DemBas_extrae_codigo_provincia(dfPir2017$Edadchar) dfPir2017$Edad = factor(dfPir2017$Edad,levels =unique(dfPir2017$Edad)) dfPir2017$Poblacion[is.na(dfPir2017$Poblacion)] = 0  head(dfPir2017) #>   Edadchar    Sexo Poblacion Edad #> 1   0 años Hombres  210605.9    0 #> 2   0 años Mujeres  199294.2    0 #> 3    1 año Hombres  218041.9    1 #> 4    1 año Mujeres  205462.2    1 #> 5   2 años Hombres  223029.6    2 #> 6   2 años Mujeres  209112.7    2 DemBas_piramide_ggplot2(dfPir2017,                       #etiquetas = T,etiquetas.size = 2,                       etiq.hombre = \"Hombres\",etiq.mujer = \"Mujeres\") +   labs(title = \"Pirámide de Población de España en 2017\") +   scale_x_discrete(     # si la variable edad fuera numeric debería usarse scale_x_continuous     breaks = seq(0,105,by=5),     labels = paste0(as.character(seq(0,105,by=5)), \"\"))"},{"path":"https://DemographyBasic.github.io/articles/introduction.html","id":"example-of-pyramids-with-segments-and-porcentages","dir":"Articles","previous_headings":"Use","what":"Example of pyramids with segments and porcentages","title":"Introduction to DemographyBasic","text":"","code":"DemBas_piramide_ggplot2_linea(dfPir2017,colorear = \"Sexo\",                             etiq.hombre = \"Hombres\",etiq.mujer = \"Mujeres\") +    labs(title = \"Perfil de la Pirámide de Población de España en 2017\") +   scale_x_discrete(     # si la variable edad fuera numeric debería usarse scale_x_continuous     breaks = seq(0,105,by=5),     labels = paste0(as.character(seq(0,105,by=5)), \"\")) +   guides(colour=\"none\")"},{"path":"https://DemographyBasic.github.io/articles/introduction.html","id":"example-of-pyramids-superimposed","dir":"Articles","previous_headings":"Use","what":"Example of pyramids superimposed","title":"Introduction to DemographyBasic","text":"","code":"dfPir2002 = dfej02a %>%    dplyr::filter( Periodo==\"1 de enero de  2002\",                   !(Sexo==\"Ambos sexos\"),                  !(Edad.simple %in% c(\"100 y más años\",\"Total\"))) %>%    dplyr::select(Edadchar=Edad.simple,                 Sexo,                 Poblacion = value) dfPir2002$Edad = DemBas_extrae_codigo_provincia(dfPir2002$Edadchar) dfPir2002$Edad = factor(dfPir2002$Edad,levels =unique(dfPir2002$Edad)) dfPir2002$Poblacion[is.na(dfPir2002$Poblacion)] = 0 dfPir2002y2017 = rbind(dfPir2002,dfPir2017) dfPir2002y2017$Caso = c(rep(2002,nrow(dfPir2002)),rep(2017,nrow(dfPir2017))) head(dfPir2002y2017) #>   Edadchar    Sexo Poblacion Edad Caso #> 1   0 años Hombres  210646.4    0 2002 #> 2   0 años Mujeres  201046.8    0 2002 #> 3    1 año Hombres  204827.9    1 2002 #> 4    1 año Mujeres  193282.1    1 2002 #> 5   2 años Hombres  197158.7    2 2002 #> 6   2 años Mujeres  187579.5    2 2002 DemBas_piramide_superpuestas_ggplot2(dfPir2002y2017,                                    etiq.hombre = \"Hombres\",etiq.mujer = \"Mujeres\",                                    transparente = T) +    labs(title = \"Pirámides de Población de España en 2002 y 2017 superpuestas\") +   scale_x_discrete(     breaks = seq(0,105,by=5),     labels = paste0(as.character(seq(0,105,by=5)), \"\"))"},{"path":"https://DemographyBasic.github.io/articles/introduction.html","id":"crear-gráficos-con-ggplot2","dir":"Articles","previous_headings":"","what":"Crear gráficos con ggplot2","title":"Introduction to DemographyBasic","text":"En este apartado haremos una introducción muy básica las capacidades gráficas del paquete “ggplot2” que forma parte del sistema “tidyverse” y es posiblemente el paquete R de tratamiento gráfico más usado en la actualidad. La idea que se usa en este paquete es añadir paso paso las distintas capas que constituirán el gráfico final: Especificar los datos (tibble o data.frame). Indicar las columnas que se van utilizar y el papel que desempeñarán en el gráfico (aes()). Añadir el tipo o tipos de gráficos que se van representar. Especificar las características particulares del gráfico, en particular las leyendas o texto explicativo que llevará. Veremos través de ejemplos cómo se construyen gráficos con el paquete “ggplot2”, en concreto construiremos los siguientes tipos de gráficos: Diagramas de barras o columnas Diagramas de líneas Se van usar dos ficheros RData: datos2_mej.RData DatosINE_PLC.RData","code":"load(system.file(\"examples/datos2_mej.RData\", package = \"DemographyBasic\")) load(system.file(\"examples/DatosINE_PLC.RData\", package = \"DemographyBasic\"))"},{"path":"https://DemographyBasic.github.io/articles/introduction.html","id":"diagrama-de-barras-o-columnas","dir":"Articles","previous_headings":"","what":"Diagrama de barras o columnas","title":"Introduction to DemographyBasic","text":"Utilizaremos el dataset: datos2_mej contenidos en datos2_mej.RData.","code":"DemBas_presentadf(head(datos2_mej))"},{"path":"https://DemographyBasic.github.io/articles/introduction.html","id":"ejemplo","dir":"Articles","previous_headings":"Diagrama de barras o columnas","what":"Ejemplo","title":"Introduction to DemographyBasic","text":"En el siguiente código veremos como se construye un diagrama de columnas de la variable “Poblacion” de las comunidades autónomas (CCAA) para el censo del 2001. En primer lugar, preparamos los datos que se van necesitar con ayuda del sistema tidyverse: Los pasos para la construcción con “ggplot2” del diagrama de barras son: Usar la llamada la función: ggplot() con los datos que utilizaremos (en el ejemplo: datos_CCAA) y la función aes(), en la que se especifican quién irá al eje X e Y. Sumamos o añadimos la geometría de representación o el tipo de gráfico. En este caso: `geom_col()`` y especificamos algunas características. Para este tipo de gráfico el color de las barras través de “fill”. Y por último, usamos la función: labs(), en la que indicaremos las distintas leyendas del gráfico. Podemos verlo en el siguiente código R:  Ejemplo. Si queremos hacer la misma representación pero intercambiando los ejes, añadiremos coord_flip(). En este gráfico además hemos modificado la forma de representar los números de las etiquetas del eje en el que aparecen las cifras de población.","code":"datos_CCAA = datos2_mej %>%    dplyr::group_by(CCAA) %>%    dplyr::summarise(TOTALCCAA = sum(TOTAL),             TOTALVarón = sum(Varon),             TOTALMujer = sum(Mujer)) %>%    dplyr::arrange(desc(TOTALCCAA))  datos_CCAA %>%    #glimpse()   # versión mejorada de la función str() en tidyverse   head(10) %>%   DemBas_presentadf() #library(ggplot2) ggplot(datos_CCAA,aes(x=CCAA,y=TOTALCCAA)) +    geom_col(fill=\"blue\") +     labs(title=\"Población Española en 2001\",          subtitle=\"por Comunidades Autónomas\",        y=\"Población\",x=\"Comunidades Autónomas\",        caption=\"Fuente: Elaboración propia\") +   scale_y_continuous(labels = scales::comma) +   theme(axis.text.x = element_text(angle = 90, hjust = 1)) ggplot(datos_CCAA,aes(x=CCAA,y=TOTALCCAA)) +    geom_col(fill=\"blue\") +     labs(title=\"Población Española en 2001\",          subtitle = \"por Comunidades Autónomas\",        y=\"Población\",x=\"Comunidades Autónomas\",        caption=\"Fuente: Elaboración propia\") +   scale_y_continuous(labels = scales::comma) +   theme(axis.text.y = element_text(angle = 0, hjust = 1)) +     coord_flip()"},{"path":"https://DemographyBasic.github.io/articles/introduction.html","id":"ordenar-barras-por-orden-descendente-de-valor","dir":"Articles","previous_headings":"Diagrama de barras o columnas > Ejemplo","what":"Ordenar barras por orden descendente de valor","title":"Introduction to DemographyBasic","text":"Ejemplo. Para presentar las columnas siguiendo algún tipo de orden (por defecto, las ordena según el orden alfabético) se puede utilizar la función reorder(). Cuando se llama reorder() el primer argumento indica la columna que se usará para las etiquetas, y la segunda columna será para indicar el orden en el que aparecerán (si se quiere presentar en orden contrario se debe colocar un signo “-” delante del segundo argumento).  Esta representación nos permite identificar rápidamente la ordenación de las comunidades autónomas según el número de habitantes.","code":"ggplot(datos_CCAA,aes(x=reorder(CCAA,TOTALCCAA),y=TOTALCCAA)) +    geom_col(fill=\"blue\") +     labs(title=\"Población Española en 2001\",          subtitle = \"por Comunidades Autónomas\",        y=\"Población\",x=\"Comunidades Autónomas\",        caption=\"Fuente: Elaboración propia\") +   scale_y_continuous(labels = scales::comma) +   theme(axis.text.y = element_text(angle = 0, hjust = 1)) +     coord_flip()"},{"path":[]},{"path":"https://DemographyBasic.github.io/articles/introduction.html","id":"ejemplo-1","dir":"Articles","previous_headings":"Diagrama de barras o columnas > Diagrama de líneas","what":"Ejemplo 1","title":"Introduction to DemographyBasic","text":"Veamos ahora como representar un diagrama de líneas. El procedimiento es prácticamente el mismo que el anterior, pero se cambiará la geometría o tipo de gráfico, que en este caso es: geom_line(). Vamos construir un diagrama de líneas con el que representaremos la evolución de la tasa bruta de natalidad de 2010 2016. Manipulamos los datos que vamos necesitar: Nos quedamos con la información en el siguiente formato: El código para el gráfico se recoge continuación:  En este gráfico también hemos sumado la geometría geom_point(), para añadir los puntos sobre el gráfico de líneas para resaltar sus valores.","code":"# library(dplyr)  # ya cargado con library(tidyverse) Nac_And = Nacimientos_CCAA_EdadMadre_2010a2016 %>%    filter(Edades==\"Todas las edades\",CCAA==\"Andalucía\") %>%    select(Nacimientos) Pob_And_ASexos = Poblacion_CCAA_TAnd_Edades_Sexo_2010a2017 %>%    filter(Sexo==\"AmbosSexos\",Codigo==\"01\",Edades==\"TOTAL EDADES\") %>%   select(`2016`,`2015`,`2014`,`2013`,`2012`,`2011`,`2010`) %>%    as.numeric() TBN_2016a2010 = func_dem_TasaBruta_t(as.numeric(Nac_And[,1]),Pob_And_ASexos) # func_dem_TasaBruta_t() definida en el fichero R: funciones_demografia.R df.rep = data.frame(Año = 2016:2010,                     TBN = TBN_2016a2010) head(df.rep) |>    DemBas_presentadf() #library(ggplot2)   # ya cargado con library(tidyverse) #library(ggthemes) ggplot(df.rep, aes(x = Año, y=TBN)) +    geom_line(alpha = 1,linetype = \"solid\", colour=\"blue\",linewidth = 1) +   geom_point(size = 2) +   labs(title=\"Tasa bruta de Natalidad (x 1.000) \",        subtitle = \"Andalucía. 2010-2016\",        y=\"Tasa bruta de natalidad\",         x=\"Años\",        caption=\"Fuente: Elaboración propia\") +   #scale_y_continuous(labels = scales::comma,breaks = seq(0,3.5,by=0.25)) +   scale_x_continuous(breaks = seq(2010,2016,by=1)) +    theme(axis.text.y = element_text(angle = 0, hjust = 1)) +    theme_solarized()"},{"path":"https://DemographyBasic.github.io/articles/introduction.html","id":"ejemplo-2","dir":"Articles","previous_headings":"Diagrama de barras o columnas > Diagrama de líneas","what":"Ejemplo 2","title":"Introduction to DemographyBasic","text":"En este nuevo ejemplo, representaremos las defunciones teóricas (función dxdx de la tabla de vida) en Andalucía en 2015, para edades simples, distinguiendo según el sexo. Los datos que se utilizarán por sexo son (para obtenerlos se han realizado previamente otras manipulaciones de los datos con el sistema tidyverse, ver @sec-apendicecodigo): En el argumento aes() se ha utilizado el papel “colour=Sexo”, para que se haga el diagrama de líneas con un color distinto para cada modalidad de la variable “Sexo”. El código para constuir el gráfico de líneas sería el siguiente:  Se ha añadido la función “theme_solarized()” que permite cambiar el aspecto general del gráfico (el tema “solarized” fija un fondo amarillo y otras características). Existen otros muchos tipos de temas predefinidos (consultar la ayuda de “ggplot2” y del paquete “ggthemes”).","code":"df.rep = data.frame(   Edades = c(tmortalidad2015_AndAmb$Edad,              tmortalidad2015_AndHom$Edad,              tmortalidad2015_AndMuj$Edad),   dx = c(tmortalidad2015_AndAmb$dx,          tmortalidad2015_AndHom$dx,          tmortalidad2015_AndMuj$dx),   Sexo = c(rep(\"Total\",nrow(tmortalidad2015_AndAmb)),     rep(\"Hombre\",nrow(tmortalidad2015_AndHom)),            rep(\"Mujer\",nrow(tmortalidad2015_AndMuj))) ) df.rep |>     slice(1:6,102:104,203:205) |>    DemBas_presentadf() ggplot(df.rep, aes(x = Edades, y=dx, group = Sexo, colour = Sexo))  +    geom_line(alpha = 1,             linetype = \"solid\",             linewidth = 1) +   labs(title=\"Defunciones teóricas por sexo. Tablas Vida\",         subtitle = \"Andalucía. 2015.\",        y=\"Defunciones teóricas (dx)\",        x=\"Edades\",        caption=\"Fuente: Elaboración propia\") +   #scale_y_continuous(labels = scales::comma,breaks = seq(0,1,by=0.1)) +   #scale_x_continuous(breaks = c(0,seq(5,100,by=5))) +   scale_x_discrete(breaks = c(0,seq(5,100,by=5))) +   theme(axis.text.y = element_text(angle = 0, hjust = 1)) +   theme_solarized()"},{"path":"https://DemographyBasic.github.io/articles/introduction.html","id":"sec-apendicecodigo","dir":"Articles","previous_headings":"Diagrama de barras o columnas > Diagrama de líneas","what":"Código tidyverse utilizado para obtener los datos de este ejemplo","title":"Introduction to DemographyBasic","text":"Nota: Aquí se ha utilizado un truco para mostrar código R escrito y ejecutado-utilizado previamente en el fichero Quarto, y mostrarlo en un punto posterior del fichero (como en un apéndice).","code":"## Extraemos los datos necesarios de defunciones y poblaciones medias  ## para obtener las tasas específicas de mortalidad para Andalucía  ## para los años 2015 y 2016:  df_def01_15 = Defunciones_CCAA_Edades_Sexo_2015 %>%    filter(Codigo==\"01\") %>%    select(EdadesNum,`Ambos sexos`) df_def01_15[101,2] = df_def01_15[101,2] + df_def01_15[102,2] df_def01_15 = df_def01_15[-102,] names(df_def01_15)[2] = \"Defunciones\"  df_pob01_T_15 = Poblacion_CCAA_Edades_Sexo_2015julio %>%    filter(CodigosCCAA==\"01\",Sexo==\"AmbosSexos\",!is.na(EdadesNum)) %>%    select(EdadesNum,Poblacion)   df_def01_16 = Defunciones_CCAA_Edades_Sexo_2016 %>%    filter(Codigo==\"01\") %>%    select(EdadesNum,`Ambos sexos`) df_def01_16[101,2] = df_def01_16[101,2] + df_def01_16[102,2] df_def01_16 = df_def01_16[-102,] names(df_def01_16)[2] = \"Defunciones\"  df_pob01_T_16 = Poblacion_CCAA_Edades_Sexo_2016julio %>%    filter(CodigosCCAA==\"01\",Sexo==\"AmbosSexos\",!is.na(EdadesNum)) %>%    select(EdadesNum,Poblacion)  ## tabla de mortalidad de edades simples para el **año 2015**:  mx_simples_15 = DemBas_mx(Px = df_pob01_T_15$Poblacion,                                      Dx = df_def01_15$Defunciones,                                      N0 = df_pob01_T_15$Poblacion[1],                                      D0 = df_def01_15$Defunciones[1]) tmortalidad2015_AndAmb = DemBas_tablavida_completa(mx_simples_15)    ## tabla de mortalidad de edades simples para el **año 2016**:  mx_simples_16 = DemBas_mx(Px = df_pob01_T_16$Poblacion,                                      Dx = df_def01_16$Defunciones,                                      N0 = df_pob01_T_16$Poblacion[1],                                      D0 = df_def01_16$Defunciones[1]) tmortalidad2016_AndAmb = DemBas_tablavida_completa(mx_simples_16)   ## Tablas de mortalidad de Hombres en Andalucía para 2016 ## Extraemos los datos necesarios de defunciones y poblaciones medias  ## para obtener las tasas específicas de mortalidad para Andalucía  ## para los años 2015 y 2016:  df_def01h_15 = Defunciones_CCAA_Edades_Sexo_2015 %>%    filter(Codigo==\"01\") %>%    select(EdadesNum,Hombres) df_def01h_15[101,2] = df_def01h_15[101,2] + df_def01h_15[102,2] df_def01h_15 = df_def01h_15[-102,] names(df_def01h_15)[2] = \"Defunciones\"  df_pob01_T_15 = Poblacion_CCAA_Edades_Sexo_2015julio %>%    filter(CodigosCCAA==\"01\",Sexo==\"Hombres\",!is.na(EdadesNum)) %>%    select(EdadesNum,Poblacion)  df_def01h_16 = Defunciones_CCAA_Edades_Sexo_2016 %>%    filter(Codigo==\"01\") %>%    select(EdadesNum,Hombres) df_def01h_16[101,2] = df_def01h_16[101,2] + df_def01h_16[102,2] df_def01h_16 = df_def01h_16[-102,] names(df_def01h_16)[2] = \"Defunciones\"  df_pob01_T_16 = Poblacion_CCAA_Edades_Sexo_2016julio %>%    filter(CodigosCCAA==\"01\",Sexo==\"Hombres\",!is.na(EdadesNum)) %>%    select(EdadesNum,Poblacion)  ## tabla de mortalidad de edades simples para el **año 2015**:  mx_simples_15 = DemBas_mx(Px = df_pob01_T_15$Poblacion,                                      Dx = df_def01h_15$Defunciones,                                      N0 = df_pob01_T_15$Poblacion[1],                                      D0 = df_def01h_15$Defunciones[1]) tmortalidad2015_AndHom = DemBas_tablavida_completa(mx_simples_15)    ## tabla de mortalidad de edades simples para el **año 2016**:  mx_simples_16 = DemBas_mx(Px = df_pob01_T_16$Poblacion,                                      Dx = df_def01h_16$Defunciones,                                      N0 = df_pob01_T_16$Poblacion[1],                                      D0 = df_def01h_16$Defunciones[1]) tmortalidad2016_AndHom = DemBas_tablavida_completa(mx_simples_16)   ## Tablas de mortalidad de Mujeres en Andalucía para 2016 ## Extraemos los datos necesarios de defunciones y poblaciones medias para  ## obtener las tasas específicas de mortalidad para España:  df_def01m_15 = Defunciones_CCAA_Edades_Sexo_2015 %>%    filter(Codigo==\"01\") %>%    select(EdadesNum,Mujeres) df_def01m_15[101,2] = df_def01m_15[101,2] + df_def01m_15[102,2] df_def01m_15 = df_def01m_15[-102,] names(df_def01m_15)[2] = \"Defunciones\"  df_pob01_T_15 = Poblacion_CCAA_Edades_Sexo_2015julio %>%    filter(CodigosCCAA==\"01\",Sexo==\"Mujeres\",!is.na(EdadesNum)) %>%    select(EdadesNum,Poblacion)  df_def01m_16 = Defunciones_CCAA_Edades_Sexo_2016 %>%    filter(Codigo==\"01\") %>%    select(EdadesNum,Mujeres) df_def01m_16[101,2] = df_def01m_16[101,2] + df_def01m_16[102,2] df_def01m_16 = df_def01m_16[-102,] names(df_def01m_16)[2] = \"Defunciones\"  df_pob01_T_16 = Poblacion_CCAA_Edades_Sexo_2016julio %>%    filter(CodigosCCAA==\"01\",Sexo==\"Mujeres\",!is.na(EdadesNum)) %>%    select(EdadesNum,Poblacion)  ## tabla de mortalidad de edades simples para el **año 2015**: mx_simples_15 = DemBas_mx(Px = df_pob01_T_15$Poblacion,                                      Dx = df_def01m_15$Defunciones,                                      N0 = df_pob01_T_15$Poblacion[1],                                      D0 = df_def01m_15$Defunciones[1]) tmortalidad2015_AndMuj = DemBas_tablavida_completa(mx_simples_15)   #- tabla de mortalidad de edades simples para el **año 2016**:  mx_simples_16 = DemBas_mx(Px = df_pob01_T_16$Poblacion,                                      Dx = df_def01m_16$Defunciones,                                      N0 = df_pob01_T_16$Poblacion[1],                                      D0 = df_def01m_16$Defunciones[1]) tmortalidad2016_AndMuj = DemBas_tablavida_completa(mx_simples_16)"},{"path":"https://DemographyBasic.github.io/articles/introduction.html","id":"crear-diagramas-de-lexis","dir":"Articles","previous_headings":"","what":"Crear diagramas de Lexis","title":"Introduction to DemographyBasic","text":"Para facilitar la elaboración de diagramas de Lexis en R se recomienda el uso del paquete R: “LexisPlotR”. Este paquete se basa en el paquete “ggplot2”, por tanto, podrían añadirse nuevas capas o características, con todas las posibilidades que admite “ggplot2”. Este paquete se puede instalar como cualquier otro paquete R. Una vez instalado, podría usarse con tan solo cargarlo. Veamos algunos ejemplos de lo que se puede representar con este paquete extraídas de la página en Github de este paquete. El código usado en los siguientes ejemplos son autoexplicativos.","code":"library(LexisPlotR)"},{"path":"https://DemographyBasic.github.io/articles/introduction.html","id":"ejemplo-lexis_grid","dir":"Articles","previous_headings":"Crear diagramas de Lexis","what":"Ejemplo: lexis_grid()","title":"Introduction to DemographyBasic","text":"Con la función lexis_grid() se representa un diagrama de Lexis desde el año 2000 2005, representando las edades desde 0 5.","code":"#lexis.grid(year.start = 2000, year.end = 2005, age.start = 0, age.end = 5) lexis_grid(year_start = 2000, year_end = 2005,             age_start = 0, age_end = 5)"},{"path":"https://DemographyBasic.github.io/articles/introduction.html","id":"ejemplo-adicional","dir":"Articles","previous_headings":"Crear diagramas de Lexis > Ejemplo: lexis_grid()","what":"Ejemplo adicional","title":"Introduction to DemographyBasic","text":"","code":"lexis_grid(year_start = 1900, year_end = 1950, age_start = 0,             age_end = 50, delta = 5)"},{"path":"https://DemographyBasic.github.io/articles/introduction.html","id":"ejemplo-lexis_age","dir":"Articles","previous_headings":"Crear diagramas de Lexis","what":"Ejemplo: lexis_age()","title":"Introduction to DemographyBasic","text":"","code":"lexis <- lexis_grid(year_start = 1900, year_end = 1905,                      age_start = 0, age_end = 5) lexis_age(lg = lexis, age = 2)"},{"path":"https://DemographyBasic.github.io/articles/introduction.html","id":"ejemplo-lexis_year","dir":"Articles","previous_headings":"Crear diagramas de Lexis","what":"Ejemplo: lexis_year()","title":"Introduction to DemographyBasic","text":"","code":"lexis <- lexis_grid(year_start = 1900, year_end = 1905,                      age_start = 0, age_end = 5) lexis_year(lg = lexis, year = 1903)"},{"path":"https://DemographyBasic.github.io/articles/introduction.html","id":"ejemplo-lexis_cohort","dir":"Articles","previous_headings":"Crear diagramas de Lexis","what":"Ejemplo: lexis_cohort()","title":"Introduction to DemographyBasic","text":"","code":"lexis <- lexis_grid(year_start = 1900, year_end = 1905,                      age_start = 0, age_end = 5) lexis_cohort(lg = lexis, cohort = 1898)"},{"path":"https://DemographyBasic.github.io/articles/introduction.html","id":"ejemplo-lexis_polygon","dir":"Articles","previous_headings":"Crear diagramas de Lexis","what":"Ejemplo: lexis_polygon()","title":"Introduction to DemographyBasic","text":"","code":"lexis <- lexis_grid(year_start = 1900, year_end = 1905,                      age_start = 0, age_end = 5)  polygons <- data.frame(group = c(1, 1, 1, 2, 2, 2),                        x = c(\"1901-01-01\", \"1902-01-01\",                               \"1902-01-01\", \"1903-01-01\",                               \"1904-01-01\", \"1904-01-01\"),                        y = c(1, 1, 2, 1, 1, 2))  lexis_polygon(lg = lexis, x = polygons$x, y = polygons$y,                group = polygons$group)"},{"path":"https://DemographyBasic.github.io/articles/introduction.html","id":"ejemplo-lexis_lifeline","dir":"Articles","previous_headings":"Crear diagramas de Lexis","what":"Ejemplo: lexis_lifeline()","title":"Introduction to DemographyBasic","text":"","code":"lg <- lexis_grid(year_start = 1900, year_end = 1905, age_start = 0,                   age_end = 5) lexis_lifeline(lg = lg, birth = \"1901-09-23\", lwd = 1.5)"},{"path":"https://DemographyBasic.github.io/articles/introduction.html","id":"ejemplo-adicional-1","dir":"Articles","previous_headings":"Crear diagramas de Lexis > Ejemplo: lexis_lifeline()","what":"Ejemplo adicional 1","title":"Introduction to DemographyBasic","text":"","code":"lexis_lifeline(lg = lg, birth = \"1901-09-23\", entry = \"1902-04-01\",                 lwd = 1.5)"},{"path":"https://DemographyBasic.github.io/articles/introduction.html","id":"ejemplo-adicional-2","dir":"Articles","previous_headings":"Crear diagramas de Lexis > Ejemplo: lexis_lifeline()","what":"Ejemplo adicional 2","title":"Introduction to DemographyBasic","text":"","code":"lexis_lifeline(lg = lg, birth = \"1901-09-23\", entry = \"1902-04-01\",                 exit = \"1904-10-31\", lwd = 1.5)"},{"path":"https://DemographyBasic.github.io/articles/introduction.html","id":"ejemplo-con-operador-tubería","dir":"Articles","previous_headings":"Crear diagramas de Lexis","what":"Ejemplo con operador “tubería”","title":"Introduction to DemographyBasic","text":"Se puede utilizar con el operador de “tubería” del paquete “magrittr” (incluido en tidyverse) y “sumar” elementos del paquete ggplot2.","code":"library(magrittr) library(ggplot2)  p <- lexis_grid(year_start = 1990, year_end = 2000,                  age_start = 0, age_end = 10) %>%   lexis_age(age = 3) %>%   lexis_cohort(cohort = 1988) %>%   lexis_year(year = 1998) %>%   lexis_lifeline(birth = \"1991-09-23\", lwd = 1.5)  p <- p + labs(x = \"Año\", y = \"Edad\", \"title\" = \"LexisPlotR\") p"},{"path":"https://DemographyBasic.github.io/articles/introduction.html","id":"referencias","dir":"Articles","previous_headings":"Crear diagramas de Lexis","what":"Referencias","title":"Introduction to DemographyBasic","text":"continuación se facilitan algunos enlaces útiles sobre este paquete: LexisPlotR en CRAN LexisPlotR en Github","code":""},{"path":"https://DemographyBasic.github.io/articles/introduction.html","id":"instalación-de-mapspain","dir":"Articles","previous_headings":"","what":"Instalación de mapSpain","title":"Introduction to DemographyBasic","text":"Información obtenida: https://ropenspain.github.io/mapSpain/ Se recomienda utilizar la siguiente instrucción R para instalar el paquete R: “mapSpain”. El primer ejemplo que se mostrará se ha obtenido del modelo de partida obtenido en la documentación de “mapSpain”: https://ropenspain.github.io/mapSpain/articles/x02_mapasesp.html. Cargamos los paquetes necesarios y utilizamos la función esp_get_prov_siane() para obtener información para la representación de mapas de tipo provincial de España para unas determinadas provincias. la geometría “ggplot2” geom_sf(), el paquete “mapSpain”: facilita la información de la geometría (la coloca en el elemento geometry del objeto R anterior: “provs”) necesaria para representar mapas de España, que permitirá crear por ejemplo un cartograma provincial con la metodología del paquete “ggplot2”. Se colorea utilizando una función que genera colores: hcl.colors().","code":"install.packages(\"mapSpain\", dependencies = TRUE) library(mapSpain) library(ggplot2) provs <- esp_get_prov(c(   \"Andalucía\", \"Ciudad Real\",   \"Murcia\", \"Ceuta\", \"Melilla\" )) dplyr::glimpse(provs) #> Rows: 12 #> Columns: 24 #> $ codauto           <chr> \"01\", \"01\", \"01\", \"01\", \"01\", \"01\", \"01\", \"01\", \"08\"… #> $ cpro              <chr> \"04\", \"11\", \"14\", \"18\", \"21\", \"23\", \"29\", \"41\", \"13\"… #> $ iso2.prov.code    <chr> \"ES-AL\", \"ES-CA\", \"ES-CO\", \"ES-GR\", \"ES-H\", \"ES-J\", … #> $ nuts.prov.code    <chr> \"ES611\", \"ES612\", \"ES613\", \"ES614\", \"ES615\", \"ES616\"… #> $ ine.prov.name     <chr> \"Almería\", \"Cádiz\", \"Córdoba\", \"Granada\", \"Huelva\", … #> $ iso2.prov.name.es <chr> \"Almería\", \"Cádiz\", \"Córdoba\", \"Granada\", \"Huelva\", … #> $ iso2.prov.name.ca <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA #> $ iso2.prov.name.ga <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA #> $ iso2.prov.name.eu <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA #> $ cldr.prov.name.en <chr> \"Almería\", \"Cádiz\", \"Córdoba\", \"Granada\", \"Huelva\", … #> $ cldr.prov.name.es <chr> \"Provincia de Almería\", \"Provincia de Cádiz\", \"Provi… #> $ cldr.prov.name.ca <chr> \"Província d’Almeria\", \"Província de Cadis\", \"Provín… #> $ cldr.prov.name.ga <chr> \"Provincia de Almería\", \"Provincia de Cádiz\", \"Provi… #> $ cldr.prov.name.eu <chr> \"Almeríako probintzia\", \"Cádizko probintzia\", \"Kordo… #> $ prov.shortname.en <chr> \"Almería\", \"Cádiz\", \"Córdoba\", \"Granada\", \"Huelva\", … #> $ prov.shortname.es <chr> \"Almería\", \"Cádiz\", \"Córdoba\", \"Granada\", \"Huelva\", … #> $ prov.shortname.ca <chr> \"Almeria\", \"Cadis\", \"Còrdova\", \"Granada\", \"Huelva\", … #> $ prov.shortname.ga <chr> \"Almería\", \"Cádiz\", \"Córdoba\", \"Granada\", \"Huelva\", … #> $ prov.shortname.eu <chr> \"Almería\", \"Cádiz\", \"Kordoba\", \"Granada\", \"Huelva\", … #> $ nuts2.code        <chr> \"ES61\", \"ES61\", \"ES61\", \"ES61\", \"ES61\", \"ES61\", \"ES6… #> $ nuts2.name        <chr> \"Andalucía\", \"Andalucía\", \"Andalucía\", \"Andalucía\", … #> $ nuts1.code        <chr> \"ES6\", \"ES6\", \"ES6\", \"ES6\", \"ES6\", \"ES6\", \"ES6\", \"ES… #> $ nuts1.name        <chr> \"SUR\", \"SUR\", \"SUR\", \"SUR\", \"SUR\", \"SUR\", \"SUR\", \"SU… #> $ geometry          <MULTIPOLYGON [°]> MULTIPOLYGON (((-1.640825 3..., MULTIPOLYGON (((-5.1… ggplot(provs) +   geom_sf(aes(fill = prov.shortname.es),     alpha = 0.9   ) +   scale_fill_discrete(type = hcl.colors(12, \"Cividis\")) +   theme_minimal() +   labs(fill = \"Provincias\")"},{"path":"https://DemographyBasic.github.io/articles/introduction.html","id":"ejemplo-1-cartograma-de-provincias-y-provincias-de-comunidades-autónomas","dir":"Articles","previous_headings":"","what":"Ejemplo 1: cartograma de provincias y provincias de comunidades autónomas","title":"Introduction to DemographyBasic","text":"Se va representar la información del “Saldo Migratorio Interno de Andalucía” En primer lugar obtenemos los datos necesarios con ayuda de tidyverse: El cartograma se obtendría con el siguiente código:  “direction=-1”: Si es “1”, valor por defecto, los colores son ordenados asociando valores pequeños al color más oscuro y los valores mayores al más claro. Si es “-1”, el orden de los colores es el inverso (es el que se ha seleccionado en este ejemplo), mayor valor el color es más oscuro. En este código se ha empleado por primera vez la miniherramienta del paquete “dplyr”: left_join(), que nos permite combinar dos tablas relacionadas. En este ejemplo, las dos tablas: esp_get_prov_siane(df_a_mapa$Codigo) df_a_mapa relacionadas por los campos: “cpro” en la primera tabla y “Codigo” en la segunda tabla.","code":"#load(\"mapaejemplo01.RData\") load(system.file(\"examples/mapaejemplo01.RData\", package = \"DemographyBasic\")) df_a_mapa = data.frame(   Codigo = DemBas_extrae_codigo_provincia(provs_filas),   Valor = SMInternoAnd ) df_a_mapa #>            Codigo  Valor #> 04 Almería     04  -1977 #> 11 Cádiz       11   3120 #> 14 Córdoba     14   7162 #> 18 Granada     18   1282 #> 21 Huelva      21   1900 #> 23 Jaén        23  10896 #> 29 Málaga      29 -19440 #> 41 Sevilla     41  -2943 library(mapSpain) #library(ggplot2) library(tidyverse)  provs = esp_get_prov(df_a_mapa$Codigo) |> # nombres provincias o codes   left_join(df_a_mapa, by = c(\"cpro\" = \"Codigo\")) colnames(provs) #>  [1] \"codauto\"           \"cpro\"              \"iso2.prov.code\"    #>  [4] \"nuts.prov.code\"    \"ine.prov.name\"     \"iso2.prov.name.es\" #>  [7] \"iso2.prov.name.ca\" \"iso2.prov.name.ga\" \"iso2.prov.name.eu\" #> [10] \"cldr.prov.name.en\" \"cldr.prov.name.es\" \"cldr.prov.name.ca\" #> [13] \"cldr.prov.name.ga\" \"cldr.prov.name.eu\" \"prov.shortname.en\" #> [16] \"prov.shortname.es\" \"prov.shortname.ca\" \"prov.shortname.ga\" #> [19] \"prov.shortname.eu\" \"nuts2.code\"        \"nuts2.name\"        #> [22] \"nuts1.code\"        \"nuts1.name\"        \"Valor\"             #> [25] \"geometry\" ggplot(provs) +   #geom_sf(aes(fill = prov.shortname.es),   geom_sf(aes(fill = Valor),     alpha = 0.9   ) +   #scale_fill_discrete(type = hcl.colors(12, \"Cividis\")) +   scale_fill_continuous(type = \"viridis\", direction = -1) +  # <1>   # otros valores para \"type\": \"gradient\"   #theme_minimal() +   theme_void() +   labs(fill = \"Provincias\",        title = \"Saldo Migratorio Interno (Andalucía 2010 a 2017)\") #theme_void() +   #theme(legend.position = c(0.1, 0.6))"},{"path":"https://DemographyBasic.github.io/articles/introduction.html","id":"ejemplo-2-cartograma-con-todas-las-provincias-de-españa","dir":"Articles","previous_headings":"","what":"Ejemplo 2: cartograma con todas las provincias de España","title":"Introduction to DemographyBasic","text":"Obtenemos los datos necesarios: Volvemos combinar los datos con la información de los mapas que vamos representar: El cartograma de todas las provincias de España se obtiene con el siguiente código:","code":"dfej02b = DemBas_read_px2(system.file(\"examples/1489.px\", package = \"DemographyBasic\")) #> Warning in grepl(\"CHARSET.*ANSI\", charset, ignore.case = T): unable to #> translate 'SUBJECT-AREA=\"Indicadores de Estructura de la Poblaci<f3>n\";' to a #> wide string #> Warning in grepl(\"CHARSET.*ANSI\", charset, ignore.case = T): input string 4 is #> invalid  head(dfej02b) #>   Periodo     Provincias    value #> 1    2018 Total Nacional 120.4598 #> 2    2017 Total Nacional 118.2625 #> 3    2016 Total Nacional 116.2798 #> 4    2015 Total Nacional 114.7221 #> 5    2014 Total Nacional 112.2386 #> 6    2013 Total Nacional 109.5282 tp4 = dfej02b %>%    dplyr::filter(Periodo==\"2017\",                  Provincias!=\"Total Nacional\")    df_a_mapa2 = data.frame(   Codigo = DemBas_extrae_codigo_provincia(tp4$Provincias),   Valor = tp4$value ) head(df_a_mapa2) #>                     Codigo     Valor #> 02 Albacete             02 119.27793 #> 03 Alicante/Alacant     03 124.76932 #> 04 Almería              04  80.04999 #> 01 Araba/Álava          01 127.48705 #> 33 Asturias             33 209.95329 #> 05 Ávila                05 191.15470 provs = esp_get_prov(df_a_mapa2$Codigo) |> # nombres provincias o codes   left_join(df_a_mapa2, by = c(\"cpro\" = \"Codigo\")) tmp = as.data.frame(provs[,c(\"prov.shortname.es\",\"cpro\",\"Valor\")]) head(tmp[,1:3],10) #>    prov.shortname.es cpro     Valor #> 1            Almería   04  80.04999 #> 2              Cádiz   11  88.59844 #> 3            Córdoba   14 115.49199 #> 4            Granada   18 103.67738 #> 5             Huelva   21  94.33518 #> 6               Jaén   23 119.42942 #> 7             Málaga   29 100.31865 #> 8            Sevilla   41  87.30034 #> 9             Huesca   22 153.12134 #> 10            Teruel   44 175.22130 ggplot(provs) +   geom_sf(aes(fill = Valor),     alpha = 0.9   ) +   scale_fill_continuous(type = \"viridis\", direction = -1) +  # \"gradient\"   #theme_minimal() +   theme_void() +   labs(fill = \"Provincias\",        title = \"Índice de Envejecimiento provincial (España en 2017)\")"},{"path":"https://DemographyBasic.github.io/articles/introduction.html","id":"ejemplo-3-comunidades-autónomas-en-españa","dir":"Articles","previous_headings":"","what":"Ejemplo 3: comunidades autónomas en España","title":"Introduction to DemographyBasic","text":"Importamos y preparamos los datos que vamos necesitar. Se usa el sistema tidyverse: Para construir un mapa sobre comunidades autónomas se ha seguido el ejemplo de la documentación de mapaSapin:  Ahora se representará el índice de envejecimiento para cada comunidad autónoma en un cartograma: El cartograma se construye con el siguiente código:  scale_fill_gradientn(). Ha permitido hacer una agrupación de colores en 10 grupos (n.breaks = 10), y para conseguir cambiar la dirección de los colores (valores pequeños son más claros y valores mayores son más oscuros) se ha usado la función rev() para invertir la presentación de los colores.","code":"dfej02c = DemBas_read_px2(system.file(\"examples/1452.px\", package = \"DemographyBasic\")) #> Warning in grepl(\"CHARSET.*ANSI\", charset, ignore.case = T): unable to #> translate 'SUBJECT-AREA=\"Indicadores de Estructura de la Poblaci<f3>n\";' to a #> wide string #> Warning in grepl(\"CHARSET.*ANSI\", charset, ignore.case = T): input string 4 is #> invalid head(dfej02c) #>   Periodo Comunidades.y.Ciudades.Autónomas    value #> 1    2018                   Total Nacional 120.4598 #> 2    2017                   Total Nacional 118.2625 #> 3    2016                   Total Nacional 116.2798 #> 4    2015                   Total Nacional 114.7221 #> 5    2014                   Total Nacional 112.2386 #> 6    2013                   Total Nacional 109.5282 tp5 = dfej02c %>%    dplyr::filter(Periodo==\"2017\",                  Comunidades.y.Ciudades.Autónomas!=\"Total Nacional\")    df_a_mapa3 = data.frame(   Codigo = DemBas_extrae_codigo_ccaa(tp5$Comunidades.y.Ciudades.Autónomas,                                    ConvierteCodSIANE=FALSE),   Valor = tp5$value ) head(df_a_mapa3) #>                            Codigo     Valor #> 01 Andalucía                   01  96.21478 #> 02 Aragón                      02 140.25249 #> 03 Asturias, Principado de     03 209.95329 #> 04 Balears, Illes              04  95.99650 #> 05 Canarias                    05 105.73139 #> 06 Cantabria                   06 146.33787 ccaa <- esp_get_ccaa(ccaa = c(   \"Catalunya\",   \"Comunidad Valenciana\",   \"Aragón\",   \"Baleares\" ))  # se puede seleccionar un subconjunto de comunidades a representar  ccaa <- ccaa %>% mutate(   ccaa_cat = esp_dict_translate(ccaa$ine.ccaa.name, \"ca\") )  ggplot(ccaa) +   geom_sf(aes(fill = ccaa_cat)) +   labs(fill = \"Comunitats autònomes\") +   theme_void() +   scale_fill_discrete(type = hcl.colors(4, \"Plasma\")) ccaa <- esp_get_ccaa(ccaa = df_a_mapa3$Codigo) |>    left_join(df_a_mapa3, by = c(\"codauto\" = \"Codigo\")) tmp = as.data.frame(ccaa[,c(\"ccaa.shortname.es\",\"codauto\",\"Valor\")]) head(tmp[,1:3],15) #>       ccaa.shortname.es codauto     Valor #> 1             Andalucía      01  96.21478 #> 2                Aragón      02 140.25249 #> 3              Asturias      03 209.95329 #> 4              Baleares      04  95.99650 #> 5              Canarias      05 105.73139 #> 6             Cantabria      06 146.33787 #> 7       Castilla y León      07 190.35820 #> 8    Castilla-La Mancha      08 113.82547 #> 9              Cataluña      09 111.86926 #> 10 Comunidad Valenciana      10 118.05022 #> 11          Extremadura      11 134.80844 #> 12              Galicia      12 192.50804 #> 13               Madrid      13 103.75784 #> 14               Murcia      14  83.37693 #> 15              Navarra      15 116.48976 ggplot(ccaa) +   geom_sf(aes(fill = Valor),alpha = 0.9,color = NA) +   labs(fill = \"Índice envejecimiento\") +   #theme_minimal() +   theme_void() +   labs(title =           \"Índice de Envejecimiento (Comunidades Autónomas, España  2017)\") +   #scale_fill_continuous(type = \"viridis\", direction = -1)  # \"gradient\"   scale_fill_gradientn(   # <1>     colors = rev(hcl.colors(100, \"Inferno\")), # rev() para invertir la escala     n.breaks = 10, #10,     labels = scales::label_comma(),     guide = guide_legend()   ) colores = c(\"#FFFE9E\", \"#FEF997\", \"#FDF491\", \"#FCF08A\", \"#FBEC84\",              \"#FBE77E\", \"#FAE378\", \"#FADF72\", \"#F9DB6C\", \"#F9D766\", \"#F9D360\")  # \"#F9CE5A\" \"#F8CA54\" \"#F8C64F\" \"#F8C249\" \"#F8BE44\" \"#F8BA3F\" \"#F8B63A\"   # \"#F7B135\" \"#F7AD31\" \"#F7A92C\" \"#F7A529\""},{"path":"https://DemographyBasic.github.io/articles/introduction.html","id":"ejemplo-4-cartograma-de-municipios-de-provincias","dir":"Articles","previous_headings":"","what":"Ejemplo 4: cartograma de municipios de provincias","title":"Introduction to DemographyBasic","text":"Cartograma de la población de los municipios de Segovia en 2019 según el INE: El cartograma se construye con el siguiente código:","code":"munic <- esp_get_munic(region = \"Segovia\") %>%     # Datos de ejemplo: Población INE   left_join(mapSpain::pobmun19, by = c(\"cpro\", \"cmun\")) tmp = as.data.frame(munic[,c(\"name.x\",\"cpro\",\"pob19\")]) head(tmp[,1:3],10) #>                         name.x cpro pob19 #> 1                       Abades   40   848 #> 2              Adrada de Pirón   40    39 #> 3                      Adrados   40   126 #> 4                 Aguilafuente   40   573 #> 5        Alconada de Maderuelo   40    25 #> 6                  Aldealcorvo   40    22 #> 7       Aldealengua de Pedraza   40    72 #> 8   Aldealengua de Santa María   40    63 #> 9  Aldeanueva de la Serrezuela   40    44 #> 10      Aldeanueva del Codonal   40   117 ggplot(munic) +   geom_sf(aes(fill = pob19), alpha = 0.9, color = NA) +   scale_fill_gradientn(     colors = rev(hcl.colors(100, \"viridis\")),  # rev() para invertir la escala     # otras plantillas de colores: \"Inferno\", \"viridis\", ...     n.breaks = 10,     labels = scales::label_comma(),     guide = guide_legend()   ) +   labs(     fill = \"Habitantes\",     title = \"Población en Segovia\",     subtitle = \"Datos INE (2019)\"   ) +   theme_void() +   theme(     plot.background = element_rect(\"grey80\"),     text = element_text(face = \"bold\"),     plot.title = element_text(hjust = .5),     plot.subtitle = element_text(hjust = .5)   )"},{"path":"https://DemographyBasic.github.io/articles/introduction.html","id":"enlaces-a-las-fuentes-demográficas-utilizadas","dir":"Articles","previous_headings":"","what":"Enlaces a las fuentes demográficas utilizadas","title":"Introduction to DemographyBasic","text":"INEBASE-Demografía y Población-Fenómenos demográficos Movimiento Natural de Población: Nacimientos Ver enlace: Paso final MNP Nacimientos","code":""},{"path":"https://DemographyBasic.github.io/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Pedro Luque-Calvo. Author, maintainer.","code":""},{"path":"https://DemographyBasic.github.io/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Luque-Calvo P (2025). DemographyBasic: Calculate Basic Procedures Demography. R package version 0.1.0, https://github.com/calote/DemographyBasic.","code":"@Manual{,   title = {DemographyBasic: Calculate Basic Procedures Of Demography},   author = {Pedro Luque-Calvo},   year = {2025},   note = {R package version 0.1.0},   url = {https://github.com/calote/DemographyBasic}, }"},{"path":"https://DemographyBasic.github.io/index.html","id":"demographybasic","dir":"","previous_headings":"","what":"Calculate Basic Procedures Of Demography","title":"Calculate Basic Procedures Of Demography","text":"Calculate Basic Procedures Demography. Functions Implemented Calculate: Life Tables (Complete Abbreviated), Overall Rates, Specific Rates, Lexis Diagrams, Population Pyramids, Demographic Maps.","code":""},{"path":"https://DemographyBasic.github.io/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Calculate Basic Procedures Of Demography","text":"can install development version DemographyBasic like :","code":"# Instalar el paquete desde GitHub install.packages(\"remotes\") remotes::install_github(\"calote/DemographyBasic\")"},{"path":"https://DemographyBasic.github.io/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Calculate Basic Procedures Of Demography","text":"basic example shows solve common problem:","code":"library(DemographyBasic) (mx0 = 1733/441881) # TMI = D^t_0/N^t  # Defunciones de menores de un año durante 2003: 1733 # Nacimientos en España en 2003: 441881 mx = c(mx0,0.00027, 0.00013, 0.00016, 0.00043, 0.00057, 0.00059, 0.00081,      0.00115, 0.00174, 0.00258, 0.00376, 0.00569, 0.00818, 0.01346,      0.02206, 0.03844, 0.06981, 0.12872, 0.21674, 0.31705, 0.48258) tv = DemBas_tablavida_abreviada(mx) tv"},{"path":"https://DemographyBasic.github.io/reference/DemBas_agrupar_variable.html","id":null,"dir":"Reference","previous_headings":"","what":"DemBas_agrupar_variable — DemBas_agrupar_variable","title":"DemBas_agrupar_variable — DemBas_agrupar_variable","text":"DemBas_agrupar_variable","code":""},{"path":"https://DemographyBasic.github.io/reference/DemBas_agrupar_variable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DemBas_agrupar_variable — DemBas_agrupar_variable","text":"","code":"DemBas_agrupar_variable(   variable,   metodo = 1,   final = 85,   vbreaks = NULL,   vlabels = NULL,   labelfinal = NULL )"},{"path":"https://DemographyBasic.github.io/reference/DemBas_agrupar_variable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DemBas_agrupar_variable — DemBas_agrupar_variable","text":"variable  metodo  final  vbreaks  vlabels  labelfinal","code":""},{"path":"https://DemographyBasic.github.io/reference/DemBas_crea_colores_brewer.html","id":null,"dir":"Reference","previous_headings":"","what":"DemBas_crea_colores_brewer — DemBas_crea_colores_brewer","title":"DemBas_crea_colores_brewer — DemBas_crea_colores_brewer","text":"crea vector de colores con paleta brewer","code":""},{"path":"https://DemographyBasic.github.io/reference/DemBas_crea_colores_brewer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DemBas_crea_colores_brewer — DemBas_crea_colores_brewer","text":"","code":"DemBas_crea_colores_brewer(cuantos, que_paletacolor = 3)"},{"path":"https://DemographyBasic.github.io/reference/DemBas_crea_colores_brewer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DemBas_crea_colores_brewer — DemBas_crea_colores_brewer","text":"cuantos  que_paletacolor","code":""},{"path":"https://DemographyBasic.github.io/reference/DemBas_datos_piramidePorc.html","id":null,"dir":"Reference","previous_headings":"","what":"DemBas_datos_piramidePorc — DemBas_datos_piramidePorc","title":"DemBas_datos_piramidePorc — DemBas_datos_piramidePorc","text":"DemBas_datos_piramidePorc","code":""},{"path":"https://DemographyBasic.github.io/reference/DemBas_datos_piramidePorc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DemBas_datos_piramidePorc — DemBas_datos_piramidePorc","text":"","code":"DemBas_datos_piramidePorc(   datosPiramide,   GEdad_final = 100,   etiq.hombre = \"Hombres\" )"},{"path":"https://DemographyBasic.github.io/reference/DemBas_datos_piramidePorc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DemBas_datos_piramidePorc — DemBas_datos_piramidePorc","text":"datosPiramide  GEdad_final  etiq.hombre","code":""},{"path":"https://DemographyBasic.github.io/reference/DemBas_extrae_codigo_ccaa.html","id":null,"dir":"Reference","previous_headings":"","what":"DemBas_extrae_codigo_ccaa — DemBas_extrae_codigo_ccaa","title":"DemBas_extrae_codigo_ccaa — DemBas_extrae_codigo_ccaa","text":"DemBas_extrae_codigo_ccaa","code":""},{"path":"https://DemographyBasic.github.io/reference/DemBas_extrae_codigo_ccaa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DemBas_extrae_codigo_ccaa — DemBas_extrae_codigo_ccaa","text":"","code":"DemBas_extrae_codigo_ccaa(vCCAA, ConvierteCodSIANE = TRUE)"},{"path":"https://DemographyBasic.github.io/reference/DemBas_extrae_codigo_ccaa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DemBas_extrae_codigo_ccaa — DemBas_extrae_codigo_ccaa","text":"vCCAA  ConvierteCodSIANE","code":""},{"path":"https://DemographyBasic.github.io/reference/DemBas_extrae_codigo_provincia.html","id":null,"dir":"Reference","previous_headings":"","what":"DemBas_extrae_codigo_provincia — DemBas_extrae_codigo_provincia","title":"DemBas_extrae_codigo_provincia — DemBas_extrae_codigo_provincia","text":"DemBas_extrae_codigo_provincia","code":""},{"path":"https://DemographyBasic.github.io/reference/DemBas_extrae_codigo_provincia.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DemBas_extrae_codigo_provincia — DemBas_extrae_codigo_provincia","text":"","code":"DemBas_extrae_codigo_provincia(vprovincias)"},{"path":"https://DemographyBasic.github.io/reference/DemBas_extrae_codigo_provincia.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DemBas_extrae_codigo_provincia — DemBas_extrae_codigo_provincia","text":"vprovincias","code":""},{"path":"https://DemographyBasic.github.io/reference/DemBas_extrae_codigo_provincia.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DemBas_extrae_codigo_provincia — DemBas_extrae_codigo_provincia","text":"vector character","code":""},{"path":"https://DemographyBasic.github.io/reference/DemBas_fmt_num.html","id":null,"dir":"Reference","previous_headings":"","what":"DemBas_fmt_num — DemBas_fmt_num","title":"DemBas_fmt_num — DemBas_fmt_num","text":"Formatea un número para presentación","code":""},{"path":"https://DemographyBasic.github.io/reference/DemBas_fmt_num.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DemBas_fmt_num — DemBas_fmt_num","text":"","code":"DemBas_fmt_num(x, ndigitos = 5, quitacerosderecha = TRUE)"},{"path":"https://DemographyBasic.github.io/reference/DemBas_fmt_num.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DemBas_fmt_num — DemBas_fmt_num","text":"x  ndigitos  quitacerosderecha","code":""},{"path":"https://DemographyBasic.github.io/reference/DemBas_fmt_num.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DemBas_fmt_num — DemBas_fmt_num","text":"devuelve un character con el número formateado","code":""},{"path":"https://DemographyBasic.github.io/reference/DemBas_fmt_num.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DemBas_fmt_num — DemBas_fmt_num","text":"","code":"DemBas_fmt_num(5654.0832) #> [1] \"5 654.0832\" DemBas_fmt_num(5654) #> [1] \"5 654\" DemBas_fmt_num(565400982.3000,2,T) #> [1] \"565 400 982.3\" DemBas_fmt_num(565400982.3000,2,F) #> [1] \"565 400 982.30\" DemBas_fmt_num(565400982.23713830023) #> [1] \"565 400 982.23714\" DemBas_fmt_num(565400982.23713830023,2) #> [1] \"565 400 982.24\""},{"path":"https://DemographyBasic.github.io/reference/DemBas_mx.html","id":null,"dir":"Reference","previous_headings":"","what":"Calcula las tasas especificas de mortalidad para edades simples — DemBas_mx","title":"Calcula las tasas especificas de mortalidad para edades simples — DemBas_mx","text":"Calcula las tasas especificas de mortalidad para edades simplex partir de las defunciones y población","code":""},{"path":"https://DemographyBasic.github.io/reference/DemBas_mx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calcula las tasas especificas de mortalidad para edades simples — DemBas_mx","text":"","code":"DemBas_mx(Px, Dx, N0, D0)"},{"path":"https://DemographyBasic.github.io/reference/DemBas_mx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calcula las tasas especificas de mortalidad para edades simples — DemBas_mx","text":"Px vector de población media por edad Dx vector de defunciones por edad N0 nacimientos en el periodo D0 defunciones en el periodo","code":""},{"path":"https://DemographyBasic.github.io/reference/DemBas_mx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calcula las tasas especificas de mortalidad para edades simples — DemBas_mx","text":"devuelve un vector con las tasas especificas de mortalidad","code":""},{"path":"https://DemographyBasic.github.io/reference/DemBas_mx_abreviada.html","id":null,"dir":"Reference","previous_headings":"","what":"Calcula las tasas especificas de mortalidad para edades agrupadas — DemBas_mx_abreviada","title":"Calcula las tasas especificas de mortalidad para edades agrupadas — DemBas_mx_abreviada","text":"Calcula las tasas especificas de mortalidad para edades agrupadas partir de las defunciones y población","code":""},{"path":"https://DemographyBasic.github.io/reference/DemBas_mx_abreviada.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calcula las tasas especificas de mortalidad para edades agrupadas — DemBas_mx_abreviada","text":"","code":"DemBas_mx_abreviada(Px, Dx, N0, D0)"},{"path":"https://DemographyBasic.github.io/reference/DemBas_mx_abreviada.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calcula las tasas especificas de mortalidad para edades agrupadas — DemBas_mx_abreviada","text":"Px vector de población media por edad Dx vector de defunciones por edad N0 nacimientos en el periodo D0 defunciones en el periodo","code":""},{"path":"https://DemographyBasic.github.io/reference/DemBas_mx_abreviada.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calcula las tasas especificas de mortalidad para edades agrupadas — DemBas_mx_abreviada","text":"devuelve un vector con las tasas especificas de mortalidad","code":""},{"path":"https://DemographyBasic.github.io/reference/DemBas_mx_abreviada.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calcula las tasas especificas de mortalidad para edades agrupadas — DemBas_mx_abreviada","text":"","code":"x = c(0,1,seq(5,100,by=5)) Px = c(NA,1627456,1938350,2104636,2388049,3070467,3614444,3545550,        3431304,3182840,2791972,2498361,2334676,1953022,1978465,        1898370,1492487,974162,495260,203924,46078,5139) Dx = c(NA,442,254,341,1032,1746,2136,2872,        2933,5545,7193,9401,13294,15972,26636,        41879,57377,68007,63007,44198,14609,2480) N0 = 441881 # Nacimientos en España en 2003: 441881 D0 = 1733 # Defunciones de menores de un año durante 2003: 1733 mx = DemBas_mx(Px,Dx,N0,D0) mx #>       0       1       2       3       4       5       6       7       8       9  #> 0.00392 0.00027 0.00013 0.00016 0.00043 0.00057 0.00059 0.00081 0.00085 0.00174  #>      10      11      12      13      14      15      16      17      18      19  #> 0.00258 0.00376 0.00569 0.00818 0.01346 0.02206 0.03844 0.06981 0.12722 0.21674  #>      20     21+  #> 0.31705 0.48258"},{"path":"https://DemographyBasic.github.io/reference/DemBas_piramidePorc.html","id":null,"dir":"Reference","previous_headings":"","what":"DemBas_piramidePorc — DemBas_piramidePorc","title":"DemBas_piramidePorc — DemBas_piramidePorc","text":"DemBas_piramidePorc","code":""},{"path":"https://DemographyBasic.github.io/reference/DemBas_piramidePorc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DemBas_piramidePorc — DemBas_piramidePorc","text":"","code":"DemBas_piramidePorc(   datosPiramide,   Gtitulo = \"Pirámide Población de la provincia de Sevilla\",   Gsubtitulo = \"Año 2020\",   Gtitulo.X = \"Porcentajes\",   GHombresEtiq = \"Hombres\",   GMujeresEtiq = \"Mujeres\",   Gedadfinal = 100,   Gext_izq = -4.5,   Gext_der = 4.5,   Glimite = 0.5,   Gsizeletra = 2.5,   GSegmentos = TRUE )"},{"path":"https://DemographyBasic.github.io/reference/DemBas_piramidePorc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DemBas_piramidePorc — DemBas_piramidePorc","text":"datosPiramide  Gtitulo  Gsubtitulo  Gtitulo.X  GHombresEtiq  GMujeresEtiq  Gedadfinal  Gext_izq  Gext_der  Glimite  Gsizeletra  GSegmentos","code":""},{"path":"https://DemographyBasic.github.io/reference/DemBas_piramidePorc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DemBas_piramidePorc — DemBas_piramidePorc","text":"ggplot2 graphics de la pirámide de Población con porcentajes","code":""},{"path":"https://DemographyBasic.github.io/reference/DemBas_piramidePorc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DemBas_piramidePorc — DemBas_piramidePorc","text":"","code":"load(file = system.file(\"examples/04003px.RData\", package = \"DemographyBasic\"))  ano_selec = 2020 Espanoles_Extranjeros = \"Españoles\"  CCAA_Prov = \"Sevilla\"  datosPiramide =  datos |>    dplyr::filter(Ano == ano_selec &                    Sexo %in% c(\"Mujeres\", \"Hombres\") &                    Edad != \"TOTAL\" &                    CCAA.Prov == CCAA_Prov &                   Espanoles.Extranjeros == Espanoles_Extranjeros) |>    dplyr::rename(Poblacion = value) |>    dplyr::select(Edad, Sexo, Poblacion)  (g_pir1 = DemBas_piramidePorc(datosPiramide,                              Gtitulo = \"Pirámide Población de la provincia de Sevilla\",                             Gsubtitulo = \"Año 2020  (españoles)\",                             GSegmentos = FALSE))"},{"path":"https://DemographyBasic.github.io/reference/DemBas_piramide_compuestasCateg_ggplot2.html","id":null,"dir":"Reference","previous_headings":"","what":"DemBas_piramide_compuestasCateg_ggplot2 — DemBas_piramide_compuestasCateg_ggplot2","title":"DemBas_piramide_compuestasCateg_ggplot2 — DemBas_piramide_compuestasCateg_ggplot2","text":"DemBas_piramide_compuestasCateg_ggplot2","code":""},{"path":"https://DemographyBasic.github.io/reference/DemBas_piramide_compuestasCateg_ggplot2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DemBas_piramide_compuestasCateg_ggplot2 — DemBas_piramide_compuestasCateg_ggplot2","text":"","code":"DemBas_piramide_compuestasCateg_ggplot2(   datosPiramide,   porcentajes = TRUE,   etiquetas = FALSE,   etiquetas.size = 4,   colores = NULL,   ordeninverso = FALSE,   alfa = 1,   bar.size = 1,   etiq.hombre = \"Hombre\",   etiq.mujer = \"Mujer\" )"},{"path":"https://DemographyBasic.github.io/reference/DemBas_piramide_compuestasCateg_ggplot2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DemBas_piramide_compuestasCateg_ggplot2 — DemBas_piramide_compuestasCateg_ggplot2","text":"datosPiramide  porcentajes  etiquetas  etiquetas.size  colores  ordeninverso  alfa  bar.size  etiq.hombre  etiq.mujer","code":""},{"path":"https://DemographyBasic.github.io/reference/DemBas_piramide_ggplot2.html","id":null,"dir":"Reference","previous_headings":"","what":"DemBas_piramide_ggplot2 — DemBas_piramide_ggplot2","title":"DemBas_piramide_ggplot2 — DemBas_piramide_ggplot2","text":"Función para crear pirámides poblacionales con ggplot2","code":""},{"path":"https://DemographyBasic.github.io/reference/DemBas_piramide_ggplot2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DemBas_piramide_ggplot2 — DemBas_piramide_ggplot2","text":"","code":"DemBas_piramide_ggplot2(   datosPiramide,   porcentajes = TRUE,   etiquetas = FALSE,   etiquetas.size = 4,   UsaCaso = FALSE,   etiq.hombre = \"Hombre\",   etiq.mujer = \"Mujer\",   colorear = \"Sexo\",   colores = NULL )"},{"path":"https://DemographyBasic.github.io/reference/DemBas_piramide_ggplot2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DemBas_piramide_ggplot2 — DemBas_piramide_ggplot2","text":"datosPiramide  porcentajes  etiquetas  etiquetas.size  UsaCaso  etiq.hombre  etiq.mujer  colorear  colores","code":""},{"path":"https://DemographyBasic.github.io/reference/DemBas_piramide_ggplot2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DemBas_piramide_ggplot2 — DemBas_piramide_ggplot2","text":"ggplot2 graphics","code":""},{"path":"https://DemographyBasic.github.io/reference/DemBas_piramide_ggplot2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DemBas_piramide_ggplot2 — DemBas_piramide_ggplot2","text":"","code":"dfej02a <- DemBas_read_px2(system.file(\"examples/9663.px\", package = \"DemographyBasic\")) head(dfej02a) #>               Periodo        Sexo Edad.simple    value #> 1  1 de julio de 2018 Ambos sexos       Total 46733038 #> 2 1 de enero de  2018 Ambos sexos       Total 46658447 #> 3  1 de julio de 2017 Ambos sexos       Total 46532869 #> 4 1 de enero de  2017 Ambos sexos       Total 46527039 #> 5  1 de julio de 2016 Ambos sexos       Total 46449874 #> 6 1 de enero de  2016 Ambos sexos       Total 46440099 tp1 = dfej02a %>%    dplyr::filter(Periodo==\"1 de enero de  2017\",Edad.simple==\"Total\") %>%     # hay dos espacios entre \"de\" y \"2017\"   dplyr::select(\"Sexo\",\"value\")  PV = round(tp1$value[tp1$Sexo==\"Hombres\"]/tp1$value[tp1$Sexo==\"Ambos sexos\"],            4)*100 #### España a 1 de enero de 2017.  x1 = as.character(DemBas_extrae_codigo_provincia(dfej02a$Edad.simple)) x1n = as.numeric(x1) #> Warning: NAs introduced by coercion  x1ngr = DemBas_agrupar_variable(x1n,metodo=2,final=100)  dfej02a$EdadGrupos = x1ngr  tp3 = dfej02a %>%    dplyr::filter( Periodo==\"1 de enero de  2017\",                   !(Edad.simple %in% c(\"100 y más años\",\"Total\"))) %>%    dplyr::group_by(Sexo,EdadGrupos) %>%    dplyr::summarise(Poblacion = round(sum(value,na.rm=T),0), .groups = \"keep\")   dfPir2017 = dfej02a %>%    dplyr::filter( Periodo==\"1 de enero de  2017\",                   !(Sexo==\"Ambos sexos\"),                  !(Edad.simple %in% c(\"100 y más años\",\"Total\"))) %>%    dplyr::select(Edadchar=Edad.simple,                 Sexo,                 Poblacion = value) dfPir2017$Edad = DemBas_extrae_codigo_provincia(dfPir2017$Edadchar) dfPir2017$Edad = factor(dfPir2017$Edad,levels =unique(dfPir2017$Edad)) dfPir2017$Poblacion[is.na(dfPir2017$Poblacion)] = 0  head(dfPir2017) #>   Edadchar    Sexo Poblacion Edad #> 1   0 años Hombres  210605.9    0 #> 2   0 años Mujeres  199294.2    0 #> 3    1 año Hombres  218041.9    1 #> 4    1 año Mujeres  205462.2    1 #> 5   2 años Hombres  223029.6    2 #> 6   2 años Mujeres  209112.7    2 DemBas_piramide_ggplot2(dfPir2017,                       #etiquetas = T,etiquetas.size = 2,                       etiq.hombre = \"Hombres\",etiq.mujer = \"Mujeres\") +   labs(title = \"Pirámide de Población de España en 2017\") +   scale_x_discrete(     # si la variable edad fuera numeric debería usarse scale_x_continuous     breaks = seq(0,105,by=5),     labels = paste0(as.character(seq(0,105,by=5)), \"\"))"},{"path":"https://DemographyBasic.github.io/reference/DemBas_piramide_ggplot2_linea.html","id":null,"dir":"Reference","previous_headings":"","what":"DemBas_piramide_ggplot2_linea — DemBas_piramide_ggplot2_linea","title":"DemBas_piramide_ggplot2_linea — DemBas_piramide_ggplot2_linea","text":"DemBas_piramide_ggplot2_linea","code":""},{"path":"https://DemographyBasic.github.io/reference/DemBas_piramide_ggplot2_linea.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DemBas_piramide_ggplot2_linea — DemBas_piramide_ggplot2_linea","text":"","code":"DemBas_piramide_ggplot2_linea(   datosPiramide,   porcentajes = TRUE,   etiquetas = FALSE,   etiquetas.size = 4,   UsaCaso = FALSE,   etiq.hombre = \"Hombre\",   etiq.mujer = \"Mujer\",   colorear = \"Sexo\",   colores = NULL )"},{"path":"https://DemographyBasic.github.io/reference/DemBas_piramide_ggplot2_linea.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DemBas_piramide_ggplot2_linea — DemBas_piramide_ggplot2_linea","text":"datosPiramide  porcentajes  etiquetas  etiquetas.size  UsaCaso  etiq.hombre  etiq.mujer  colorear  colores","code":""},{"path":"https://DemographyBasic.github.io/reference/DemBas_piramide_ggplot2_linea.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DemBas_piramide_ggplot2_linea — DemBas_piramide_ggplot2_linea","text":"","code":"# Ejecutar ejemplo de función DemBas_piramide_ggplot2() DemBas_piramide_ggplot2_linea(dfPir2017,colorear = \"Sexo\",                             etiq.hombre = \"Hombres\",etiq.mujer = \"Mujeres\") +    labs(title = \"Perfil de la Pirámide de Población de España en 2017\") +   scale_x_discrete(     # si la variable edad fuera numeric debería usarse scale_x_continuous     breaks = seq(0,105,by=5),     labels = paste0(as.character(seq(0,105,by=5)), \"\")) +   guides(colour=\"none\") #> Error: object 'dfPir2017' not found"},{"path":"https://DemographyBasic.github.io/reference/DemBas_piramide_superpuestas_ggplot2.html","id":null,"dir":"Reference","previous_headings":"","what":"DemBas_piramide_superpuestas_ggplot2 — DemBas_piramide_superpuestas_ggplot2","title":"DemBas_piramide_superpuestas_ggplot2 — DemBas_piramide_superpuestas_ggplot2","text":"DemBas_piramide_superpuestas_ggplot2","code":""},{"path":"https://DemographyBasic.github.io/reference/DemBas_piramide_superpuestas_ggplot2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DemBas_piramide_superpuestas_ggplot2 — DemBas_piramide_superpuestas_ggplot2","text":"","code":"DemBas_piramide_superpuestas_ggplot2(   datosPiramide,   porcentajes = TRUE,   etiquetas = FALSE,   etiquetas.size = 4,   colores = NULL,   transparente = FALSE,   alfa = 0.1,   bar.size = 1,   etiq.hombre = \"Hombre\",   etiq.mujer = \"Mujer\" )"},{"path":"https://DemographyBasic.github.io/reference/DemBas_piramide_superpuestas_ggplot2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DemBas_piramide_superpuestas_ggplot2 — DemBas_piramide_superpuestas_ggplot2","text":"datosPiramide  porcentajes  etiquetas  etiquetas.size  colores  transparente  alfa  bar.size  etiq.hombre  etiq.mujer","code":""},{"path":"https://DemographyBasic.github.io/reference/DemBas_piramide_superpuestas_ggplot2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DemBas_piramide_superpuestas_ggplot2 — DemBas_piramide_superpuestas_ggplot2","text":"","code":"# Ejecutar el código ejemplo de la función DemBas_piramide_ggplot2 dfPir2002 = dfej02a %>%    dplyr::filter( Periodo==\"1 de enero de  2002\",                   !(Sexo==\"Ambos sexos\"),                  !(Edad.simple %in% c(\"100 y más años\",\"Total\"))) %>%    dplyr::select(Edadchar=Edad.simple,                 Sexo,                 Poblacion = value) #> Error: object 'dfej02a' not found dfPir2002$Edad = DemBas_extrae_codigo_provincia(dfPir2002$Edadchar) #> Error: object 'dfPir2002' not found dfPir2002$Edad = factor(dfPir2002$Edad,levels =unique(dfPir2002$Edad)) #> Error: object 'dfPir2002' not found dfPir2002$Poblacion[is.na(dfPir2002$Poblacion)] = 0 #> Error: object 'dfPir2002' not found dfPir2002y2017 = rbind(dfPir2002,dfPir2017) #> Error: object 'dfPir2002' not found dfPir2002y2017$Caso = c(rep(2002,nrow(dfPir2002)),rep(2017,nrow(dfPir2017))) #> Error: object 'dfPir2002' not found head(dfPir2002y2017) #> Error: object 'dfPir2002y2017' not found DemBas_piramide_superpuestas_ggplot2(dfPir2002y2017,                                    etiq.hombre = \"Hombres\",etiq.mujer = \"Mujeres\",                                    transparente = T) +    labs(title = \"Pirámides de Población de España en 2002 y 2017 superpuestas\") +   scale_x_discrete(     breaks = seq(0,105,by=5),     labels = paste0(as.character(seq(0,105,by=5)), \"\"))  #> Error: object 'dfPir2002y2017' not found"},{"path":"https://DemographyBasic.github.io/reference/DemBas_presentadf.html","id":null,"dir":"Reference","previous_headings":"","what":"DemBas_presentadf — DemBas_presentadf","title":"DemBas_presentadf — DemBas_presentadf","text":"Presenta un data.frame en formato LaTeX o HTML con kableExtra","code":""},{"path":"https://DemographyBasic.github.io/reference/DemBas_presentadf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DemBas_presentadf — DemBas_presentadf","text":"","code":"DemBas_presentadf(   datos1,   scaption = NULL,   apaisadalatex = FALSE,   variaspaginas = TRUE,   fuentesize = NULL,   CompletaAncho = FALSE )"},{"path":"https://DemographyBasic.github.io/reference/DemBas_presentadf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DemBas_presentadf — DemBas_presentadf","text":"datos1  scaption  apaisadalatex  variaspaginas  fuentesize  CompletaAncho","code":""},{"path":"https://DemographyBasic.github.io/reference/DemBas_presentadf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DemBas_presentadf — DemBas_presentadf","text":"devuelve una tabla para ser presentada en formato LaTeX o HTML","code":""},{"path":"https://DemographyBasic.github.io/reference/DemBas_presentadf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DemBas_presentadf — DemBas_presentadf","text":"","code":"DemBas_presentadf(mtcars) #> <table class=\"table table-striped table-hover table-condensed table-responsive\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\"> #>  <thead> #>   <tr> #>    <th style=\"text-align:left;\">  <\/th> #>    <th style=\"text-align:right;\"> mpg <\/th> #>    <th style=\"text-align:right;\"> cyl <\/th> #>    <th style=\"text-align:right;\"> disp <\/th> #>    <th style=\"text-align:right;\"> hp <\/th> #>    <th style=\"text-align:right;\"> drat <\/th> #>    <th style=\"text-align:right;\"> wt <\/th> #>    <th style=\"text-align:right;\"> qsec <\/th> #>    <th style=\"text-align:right;\"> vs <\/th> #>    <th style=\"text-align:right;\"> am <\/th> #>    <th style=\"text-align:right;\"> gear <\/th> #>    <th style=\"text-align:right;\"> carb <\/th> #>   <\/tr> #>  <\/thead> #> <tbody> #>   <tr> #>    <td style=\"text-align:left;\"> Mazda RX4 <\/td> #>    <td style=\"text-align:right;\"> 21.0 <\/td> #>    <td style=\"text-align:right;\"> 6 <\/td> #>    <td style=\"text-align:right;\"> 160.0 <\/td> #>    <td style=\"text-align:right;\"> 110 <\/td> #>    <td style=\"text-align:right;\"> 3.90 <\/td> #>    <td style=\"text-align:right;\"> 2.620 <\/td> #>    <td style=\"text-align:right;\"> 16.46 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Mazda RX4 Wag <\/td> #>    <td style=\"text-align:right;\"> 21.0 <\/td> #>    <td style=\"text-align:right;\"> 6 <\/td> #>    <td style=\"text-align:right;\"> 160.0 <\/td> #>    <td style=\"text-align:right;\"> 110 <\/td> #>    <td style=\"text-align:right;\"> 3.90 <\/td> #>    <td style=\"text-align:right;\"> 2.875 <\/td> #>    <td style=\"text-align:right;\"> 17.02 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Datsun 710 <\/td> #>    <td style=\"text-align:right;\"> 22.8 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>    <td style=\"text-align:right;\"> 108.0 <\/td> #>    <td style=\"text-align:right;\"> 93 <\/td> #>    <td style=\"text-align:right;\"> 3.85 <\/td> #>    <td style=\"text-align:right;\"> 2.320 <\/td> #>    <td style=\"text-align:right;\"> 18.61 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Hornet 4 Drive <\/td> #>    <td style=\"text-align:right;\"> 21.4 <\/td> #>    <td style=\"text-align:right;\"> 6 <\/td> #>    <td style=\"text-align:right;\"> 258.0 <\/td> #>    <td style=\"text-align:right;\"> 110 <\/td> #>    <td style=\"text-align:right;\"> 3.08 <\/td> #>    <td style=\"text-align:right;\"> 3.215 <\/td> #>    <td style=\"text-align:right;\"> 19.44 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 3 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Hornet Sportabout <\/td> #>    <td style=\"text-align:right;\"> 18.7 <\/td> #>    <td style=\"text-align:right;\"> 8 <\/td> #>    <td style=\"text-align:right;\"> 360.0 <\/td> #>    <td style=\"text-align:right;\"> 175 <\/td> #>    <td style=\"text-align:right;\"> 3.15 <\/td> #>    <td style=\"text-align:right;\"> 3.440 <\/td> #>    <td style=\"text-align:right;\"> 17.02 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 3 <\/td> #>    <td style=\"text-align:right;\"> 2 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Valiant <\/td> #>    <td style=\"text-align:right;\"> 18.1 <\/td> #>    <td style=\"text-align:right;\"> 6 <\/td> #>    <td style=\"text-align:right;\"> 225.0 <\/td> #>    <td style=\"text-align:right;\"> 105 <\/td> #>    <td style=\"text-align:right;\"> 2.76 <\/td> #>    <td style=\"text-align:right;\"> 3.460 <\/td> #>    <td style=\"text-align:right;\"> 20.22 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 3 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Duster 360 <\/td> #>    <td style=\"text-align:right;\"> 14.3 <\/td> #>    <td style=\"text-align:right;\"> 8 <\/td> #>    <td style=\"text-align:right;\"> 360.0 <\/td> #>    <td style=\"text-align:right;\"> 245 <\/td> #>    <td style=\"text-align:right;\"> 3.21 <\/td> #>    <td style=\"text-align:right;\"> 3.570 <\/td> #>    <td style=\"text-align:right;\"> 15.84 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 3 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Merc 240D <\/td> #>    <td style=\"text-align:right;\"> 24.4 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>    <td style=\"text-align:right;\"> 146.7 <\/td> #>    <td style=\"text-align:right;\"> 62 <\/td> #>    <td style=\"text-align:right;\"> 3.69 <\/td> #>    <td style=\"text-align:right;\"> 3.190 <\/td> #>    <td style=\"text-align:right;\"> 20.00 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>    <td style=\"text-align:right;\"> 2 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Merc 230 <\/td> #>    <td style=\"text-align:right;\"> 22.8 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>    <td style=\"text-align:right;\"> 140.8 <\/td> #>    <td style=\"text-align:right;\"> 95 <\/td> #>    <td style=\"text-align:right;\"> 3.92 <\/td> #>    <td style=\"text-align:right;\"> 3.150 <\/td> #>    <td style=\"text-align:right;\"> 22.90 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>    <td style=\"text-align:right;\"> 2 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Merc 280 <\/td> #>    <td style=\"text-align:right;\"> 19.2 <\/td> #>    <td style=\"text-align:right;\"> 6 <\/td> #>    <td style=\"text-align:right;\"> 167.6 <\/td> #>    <td style=\"text-align:right;\"> 123 <\/td> #>    <td style=\"text-align:right;\"> 3.92 <\/td> #>    <td style=\"text-align:right;\"> 3.440 <\/td> #>    <td style=\"text-align:right;\"> 18.30 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Merc 280C <\/td> #>    <td style=\"text-align:right;\"> 17.8 <\/td> #>    <td style=\"text-align:right;\"> 6 <\/td> #>    <td style=\"text-align:right;\"> 167.6 <\/td> #>    <td style=\"text-align:right;\"> 123 <\/td> #>    <td style=\"text-align:right;\"> 3.92 <\/td> #>    <td style=\"text-align:right;\"> 3.440 <\/td> #>    <td style=\"text-align:right;\"> 18.90 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Merc 450SE <\/td> #>    <td style=\"text-align:right;\"> 16.4 <\/td> #>    <td style=\"text-align:right;\"> 8 <\/td> #>    <td style=\"text-align:right;\"> 275.8 <\/td> #>    <td style=\"text-align:right;\"> 180 <\/td> #>    <td style=\"text-align:right;\"> 3.07 <\/td> #>    <td style=\"text-align:right;\"> 4.070 <\/td> #>    <td style=\"text-align:right;\"> 17.40 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 3 <\/td> #>    <td style=\"text-align:right;\"> 3 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Merc 450SL <\/td> #>    <td style=\"text-align:right;\"> 17.3 <\/td> #>    <td style=\"text-align:right;\"> 8 <\/td> #>    <td style=\"text-align:right;\"> 275.8 <\/td> #>    <td style=\"text-align:right;\"> 180 <\/td> #>    <td style=\"text-align:right;\"> 3.07 <\/td> #>    <td style=\"text-align:right;\"> 3.730 <\/td> #>    <td style=\"text-align:right;\"> 17.60 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 3 <\/td> #>    <td style=\"text-align:right;\"> 3 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Merc 450SLC <\/td> #>    <td style=\"text-align:right;\"> 15.2 <\/td> #>    <td style=\"text-align:right;\"> 8 <\/td> #>    <td style=\"text-align:right;\"> 275.8 <\/td> #>    <td style=\"text-align:right;\"> 180 <\/td> #>    <td style=\"text-align:right;\"> 3.07 <\/td> #>    <td style=\"text-align:right;\"> 3.780 <\/td> #>    <td style=\"text-align:right;\"> 18.00 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 3 <\/td> #>    <td style=\"text-align:right;\"> 3 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Cadillac Fleetwood <\/td> #>    <td style=\"text-align:right;\"> 10.4 <\/td> #>    <td style=\"text-align:right;\"> 8 <\/td> #>    <td style=\"text-align:right;\"> 472.0 <\/td> #>    <td style=\"text-align:right;\"> 205 <\/td> #>    <td style=\"text-align:right;\"> 2.93 <\/td> #>    <td style=\"text-align:right;\"> 5.250 <\/td> #>    <td style=\"text-align:right;\"> 17.98 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 3 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Lincoln Continental <\/td> #>    <td style=\"text-align:right;\"> 10.4 <\/td> #>    <td style=\"text-align:right;\"> 8 <\/td> #>    <td style=\"text-align:right;\"> 460.0 <\/td> #>    <td style=\"text-align:right;\"> 215 <\/td> #>    <td style=\"text-align:right;\"> 3.00 <\/td> #>    <td style=\"text-align:right;\"> 5.424 <\/td> #>    <td style=\"text-align:right;\"> 17.82 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 3 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Chrysler Imperial <\/td> #>    <td style=\"text-align:right;\"> 14.7 <\/td> #>    <td style=\"text-align:right;\"> 8 <\/td> #>    <td style=\"text-align:right;\"> 440.0 <\/td> #>    <td style=\"text-align:right;\"> 230 <\/td> #>    <td style=\"text-align:right;\"> 3.23 <\/td> #>    <td style=\"text-align:right;\"> 5.345 <\/td> #>    <td style=\"text-align:right;\"> 17.42 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 3 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Fiat 128 <\/td> #>    <td style=\"text-align:right;\"> 32.4 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>    <td style=\"text-align:right;\"> 78.7 <\/td> #>    <td style=\"text-align:right;\"> 66 <\/td> #>    <td style=\"text-align:right;\"> 4.08 <\/td> #>    <td style=\"text-align:right;\"> 2.200 <\/td> #>    <td style=\"text-align:right;\"> 19.47 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Honda Civic <\/td> #>    <td style=\"text-align:right;\"> 30.4 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>    <td style=\"text-align:right;\"> 75.7 <\/td> #>    <td style=\"text-align:right;\"> 52 <\/td> #>    <td style=\"text-align:right;\"> 4.93 <\/td> #>    <td style=\"text-align:right;\"> 1.615 <\/td> #>    <td style=\"text-align:right;\"> 18.52 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>    <td style=\"text-align:right;\"> 2 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Toyota Corolla <\/td> #>    <td style=\"text-align:right;\"> 33.9 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>    <td style=\"text-align:right;\"> 71.1 <\/td> #>    <td style=\"text-align:right;\"> 65 <\/td> #>    <td style=\"text-align:right;\"> 4.22 <\/td> #>    <td style=\"text-align:right;\"> 1.835 <\/td> #>    <td style=\"text-align:right;\"> 19.90 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Toyota Corona <\/td> #>    <td style=\"text-align:right;\"> 21.5 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>    <td style=\"text-align:right;\"> 120.1 <\/td> #>    <td style=\"text-align:right;\"> 97 <\/td> #>    <td style=\"text-align:right;\"> 3.70 <\/td> #>    <td style=\"text-align:right;\"> 2.465 <\/td> #>    <td style=\"text-align:right;\"> 20.01 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 3 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Dodge Challenger <\/td> #>    <td style=\"text-align:right;\"> 15.5 <\/td> #>    <td style=\"text-align:right;\"> 8 <\/td> #>    <td style=\"text-align:right;\"> 318.0 <\/td> #>    <td style=\"text-align:right;\"> 150 <\/td> #>    <td style=\"text-align:right;\"> 2.76 <\/td> #>    <td style=\"text-align:right;\"> 3.520 <\/td> #>    <td style=\"text-align:right;\"> 16.87 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 3 <\/td> #>    <td style=\"text-align:right;\"> 2 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> AMC Javelin <\/td> #>    <td style=\"text-align:right;\"> 15.2 <\/td> #>    <td style=\"text-align:right;\"> 8 <\/td> #>    <td style=\"text-align:right;\"> 304.0 <\/td> #>    <td style=\"text-align:right;\"> 150 <\/td> #>    <td style=\"text-align:right;\"> 3.15 <\/td> #>    <td style=\"text-align:right;\"> 3.435 <\/td> #>    <td style=\"text-align:right;\"> 17.30 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 3 <\/td> #>    <td style=\"text-align:right;\"> 2 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Camaro Z28 <\/td> #>    <td style=\"text-align:right;\"> 13.3 <\/td> #>    <td style=\"text-align:right;\"> 8 <\/td> #>    <td style=\"text-align:right;\"> 350.0 <\/td> #>    <td style=\"text-align:right;\"> 245 <\/td> #>    <td style=\"text-align:right;\"> 3.73 <\/td> #>    <td style=\"text-align:right;\"> 3.840 <\/td> #>    <td style=\"text-align:right;\"> 15.41 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 3 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Pontiac Firebird <\/td> #>    <td style=\"text-align:right;\"> 19.2 <\/td> #>    <td style=\"text-align:right;\"> 8 <\/td> #>    <td style=\"text-align:right;\"> 400.0 <\/td> #>    <td style=\"text-align:right;\"> 175 <\/td> #>    <td style=\"text-align:right;\"> 3.08 <\/td> #>    <td style=\"text-align:right;\"> 3.845 <\/td> #>    <td style=\"text-align:right;\"> 17.05 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 3 <\/td> #>    <td style=\"text-align:right;\"> 2 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Fiat X1-9 <\/td> #>    <td style=\"text-align:right;\"> 27.3 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>    <td style=\"text-align:right;\"> 79.0 <\/td> #>    <td style=\"text-align:right;\"> 66 <\/td> #>    <td style=\"text-align:right;\"> 4.08 <\/td> #>    <td style=\"text-align:right;\"> 1.935 <\/td> #>    <td style=\"text-align:right;\"> 18.90 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Porsche 914-2 <\/td> #>    <td style=\"text-align:right;\"> 26.0 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>    <td style=\"text-align:right;\"> 120.3 <\/td> #>    <td style=\"text-align:right;\"> 91 <\/td> #>    <td style=\"text-align:right;\"> 4.43 <\/td> #>    <td style=\"text-align:right;\"> 2.140 <\/td> #>    <td style=\"text-align:right;\"> 16.70 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>    <td style=\"text-align:right;\"> 5 <\/td> #>    <td style=\"text-align:right;\"> 2 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Lotus Europa <\/td> #>    <td style=\"text-align:right;\"> 30.4 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>    <td style=\"text-align:right;\"> 95.1 <\/td> #>    <td style=\"text-align:right;\"> 113 <\/td> #>    <td style=\"text-align:right;\"> 3.77 <\/td> #>    <td style=\"text-align:right;\"> 1.513 <\/td> #>    <td style=\"text-align:right;\"> 16.90 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>    <td style=\"text-align:right;\"> 5 <\/td> #>    <td style=\"text-align:right;\"> 2 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Ford Pantera L <\/td> #>    <td style=\"text-align:right;\"> 15.8 <\/td> #>    <td style=\"text-align:right;\"> 8 <\/td> #>    <td style=\"text-align:right;\"> 351.0 <\/td> #>    <td style=\"text-align:right;\"> 264 <\/td> #>    <td style=\"text-align:right;\"> 4.22 <\/td> #>    <td style=\"text-align:right;\"> 3.170 <\/td> #>    <td style=\"text-align:right;\"> 14.50 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>    <td style=\"text-align:right;\"> 5 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Ferrari Dino <\/td> #>    <td style=\"text-align:right;\"> 19.7 <\/td> #>    <td style=\"text-align:right;\"> 6 <\/td> #>    <td style=\"text-align:right;\"> 145.0 <\/td> #>    <td style=\"text-align:right;\"> 175 <\/td> #>    <td style=\"text-align:right;\"> 3.62 <\/td> #>    <td style=\"text-align:right;\"> 2.770 <\/td> #>    <td style=\"text-align:right;\"> 15.50 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>    <td style=\"text-align:right;\"> 5 <\/td> #>    <td style=\"text-align:right;\"> 6 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Maserati Bora <\/td> #>    <td style=\"text-align:right;\"> 15.0 <\/td> #>    <td style=\"text-align:right;\"> 8 <\/td> #>    <td style=\"text-align:right;\"> 301.0 <\/td> #>    <td style=\"text-align:right;\"> 335 <\/td> #>    <td style=\"text-align:right;\"> 3.54 <\/td> #>    <td style=\"text-align:right;\"> 3.570 <\/td> #>    <td style=\"text-align:right;\"> 14.60 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>    <td style=\"text-align:right;\"> 5 <\/td> #>    <td style=\"text-align:right;\"> 8 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Volvo 142E <\/td> #>    <td style=\"text-align:right;\"> 21.4 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>    <td style=\"text-align:right;\"> 121.0 <\/td> #>    <td style=\"text-align:right;\"> 109 <\/td> #>    <td style=\"text-align:right;\"> 4.11 <\/td> #>    <td style=\"text-align:right;\"> 2.780 <\/td> #>    <td style=\"text-align:right;\"> 18.60 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>    <td style=\"text-align:right;\"> 2 <\/td> #>   <\/tr> #> <\/tbody> #> <\/table>"},{"path":"https://DemographyBasic.github.io/reference/DemBas_presentadf_modelo01.html","id":null,"dir":"Reference","previous_headings":"","what":"DemBas_presentadf_modelo01 — DemBas_presentadf_modelo01","title":"DemBas_presentadf_modelo01 — DemBas_presentadf_modelo01","text":"Presenta un data.frame en formato LaTeX o HTML con kableExtra","code":""},{"path":"https://DemographyBasic.github.io/reference/DemBas_presentadf_modelo01.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DemBas_presentadf_modelo01 — DemBas_presentadf_modelo01","text":"","code":"DemBas_presentadf_modelo01(   df_tabla,   tablavariaspaginas = T,   tfuente = 8,   leyendatabla = NULL,   vCabecera = NULL,   valigncol = NULL )"},{"path":"https://DemographyBasic.github.io/reference/DemBas_presentadf_modelo01.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DemBas_presentadf_modelo01 — DemBas_presentadf_modelo01","text":"df_tabla  tablavariaspaginas  tfuente  leyendatabla  vCabecera  valigncol","code":""},{"path":"https://DemographyBasic.github.io/reference/DemBas_presentadf_modelo01.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DemBas_presentadf_modelo01 — DemBas_presentadf_modelo01","text":"","code":"DemBas_presentadf_modelo01(mtcars) #> <table class=\"table table-striped table-hover table-condensed table-responsive\" style=\"font-size: 8px; width: auto !important; margin-left: auto; margin-right: auto;\"> #>  <thead> #>   <tr> #>    <th style=\"text-align:left;text-align: center;\">  <\/th> #>    <th style=\"text-align:right;text-align: center;\"> mpg <\/th> #>    <th style=\"text-align:right;text-align: center;\"> cyl <\/th> #>    <th style=\"text-align:right;text-align: center;\"> disp <\/th> #>    <th style=\"text-align:right;text-align: center;\"> hp <\/th> #>    <th style=\"text-align:right;text-align: center;\"> drat <\/th> #>    <th style=\"text-align:right;text-align: center;\"> wt <\/th> #>    <th style=\"text-align:right;text-align: center;\"> qsec <\/th> #>    <th style=\"text-align:right;text-align: center;\"> vs <\/th> #>    <th style=\"text-align:right;text-align: center;\"> am <\/th> #>    <th style=\"text-align:right;text-align: center;\"> gear <\/th> #>    <th style=\"text-align:right;text-align: center;\"> carb <\/th> #>   <\/tr> #>  <\/thead> #> <tbody> #>   <tr> #>    <td style=\"text-align:left;\"> Mazda RX4 <\/td> #>    <td style=\"text-align:right;\"> 21.0 <\/td> #>    <td style=\"text-align:right;\"> 6 <\/td> #>    <td style=\"text-align:right;\"> 160.0 <\/td> #>    <td style=\"text-align:right;\"> 110 <\/td> #>    <td style=\"text-align:right;\"> 3.90 <\/td> #>    <td style=\"text-align:right;\"> 2.620 <\/td> #>    <td style=\"text-align:right;\"> 16.46 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Mazda RX4 Wag <\/td> #>    <td style=\"text-align:right;\"> 21.0 <\/td> #>    <td style=\"text-align:right;\"> 6 <\/td> #>    <td style=\"text-align:right;\"> 160.0 <\/td> #>    <td style=\"text-align:right;\"> 110 <\/td> #>    <td style=\"text-align:right;\"> 3.90 <\/td> #>    <td style=\"text-align:right;\"> 2.875 <\/td> #>    <td style=\"text-align:right;\"> 17.02 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Datsun 710 <\/td> #>    <td style=\"text-align:right;\"> 22.8 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>    <td style=\"text-align:right;\"> 108.0 <\/td> #>    <td style=\"text-align:right;\"> 93 <\/td> #>    <td style=\"text-align:right;\"> 3.85 <\/td> #>    <td style=\"text-align:right;\"> 2.320 <\/td> #>    <td style=\"text-align:right;\"> 18.61 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Hornet 4 Drive <\/td> #>    <td style=\"text-align:right;\"> 21.4 <\/td> #>    <td style=\"text-align:right;\"> 6 <\/td> #>    <td style=\"text-align:right;\"> 258.0 <\/td> #>    <td style=\"text-align:right;\"> 110 <\/td> #>    <td style=\"text-align:right;\"> 3.08 <\/td> #>    <td style=\"text-align:right;\"> 3.215 <\/td> #>    <td style=\"text-align:right;\"> 19.44 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 3 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Hornet Sportabout <\/td> #>    <td style=\"text-align:right;\"> 18.7 <\/td> #>    <td style=\"text-align:right;\"> 8 <\/td> #>    <td style=\"text-align:right;\"> 360.0 <\/td> #>    <td style=\"text-align:right;\"> 175 <\/td> #>    <td style=\"text-align:right;\"> 3.15 <\/td> #>    <td style=\"text-align:right;\"> 3.440 <\/td> #>    <td style=\"text-align:right;\"> 17.02 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 3 <\/td> #>    <td style=\"text-align:right;\"> 2 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Valiant <\/td> #>    <td style=\"text-align:right;\"> 18.1 <\/td> #>    <td style=\"text-align:right;\"> 6 <\/td> #>    <td style=\"text-align:right;\"> 225.0 <\/td> #>    <td style=\"text-align:right;\"> 105 <\/td> #>    <td style=\"text-align:right;\"> 2.76 <\/td> #>    <td style=\"text-align:right;\"> 3.460 <\/td> #>    <td style=\"text-align:right;\"> 20.22 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 3 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Duster 360 <\/td> #>    <td style=\"text-align:right;\"> 14.3 <\/td> #>    <td style=\"text-align:right;\"> 8 <\/td> #>    <td style=\"text-align:right;\"> 360.0 <\/td> #>    <td style=\"text-align:right;\"> 245 <\/td> #>    <td style=\"text-align:right;\"> 3.21 <\/td> #>    <td style=\"text-align:right;\"> 3.570 <\/td> #>    <td style=\"text-align:right;\"> 15.84 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 3 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Merc 240D <\/td> #>    <td style=\"text-align:right;\"> 24.4 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>    <td style=\"text-align:right;\"> 146.7 <\/td> #>    <td style=\"text-align:right;\"> 62 <\/td> #>    <td style=\"text-align:right;\"> 3.69 <\/td> #>    <td style=\"text-align:right;\"> 3.190 <\/td> #>    <td style=\"text-align:right;\"> 20.00 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>    <td style=\"text-align:right;\"> 2 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Merc 230 <\/td> #>    <td style=\"text-align:right;\"> 22.8 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>    <td style=\"text-align:right;\"> 140.8 <\/td> #>    <td style=\"text-align:right;\"> 95 <\/td> #>    <td style=\"text-align:right;\"> 3.92 <\/td> #>    <td style=\"text-align:right;\"> 3.150 <\/td> #>    <td style=\"text-align:right;\"> 22.90 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>    <td style=\"text-align:right;\"> 2 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Merc 280 <\/td> #>    <td style=\"text-align:right;\"> 19.2 <\/td> #>    <td style=\"text-align:right;\"> 6 <\/td> #>    <td style=\"text-align:right;\"> 167.6 <\/td> #>    <td style=\"text-align:right;\"> 123 <\/td> #>    <td style=\"text-align:right;\"> 3.92 <\/td> #>    <td style=\"text-align:right;\"> 3.440 <\/td> #>    <td style=\"text-align:right;\"> 18.30 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Merc 280C <\/td> #>    <td style=\"text-align:right;\"> 17.8 <\/td> #>    <td style=\"text-align:right;\"> 6 <\/td> #>    <td style=\"text-align:right;\"> 167.6 <\/td> #>    <td style=\"text-align:right;\"> 123 <\/td> #>    <td style=\"text-align:right;\"> 3.92 <\/td> #>    <td style=\"text-align:right;\"> 3.440 <\/td> #>    <td style=\"text-align:right;\"> 18.90 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Merc 450SE <\/td> #>    <td style=\"text-align:right;\"> 16.4 <\/td> #>    <td style=\"text-align:right;\"> 8 <\/td> #>    <td style=\"text-align:right;\"> 275.8 <\/td> #>    <td style=\"text-align:right;\"> 180 <\/td> #>    <td style=\"text-align:right;\"> 3.07 <\/td> #>    <td style=\"text-align:right;\"> 4.070 <\/td> #>    <td style=\"text-align:right;\"> 17.40 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 3 <\/td> #>    <td style=\"text-align:right;\"> 3 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Merc 450SL <\/td> #>    <td style=\"text-align:right;\"> 17.3 <\/td> #>    <td style=\"text-align:right;\"> 8 <\/td> #>    <td style=\"text-align:right;\"> 275.8 <\/td> #>    <td style=\"text-align:right;\"> 180 <\/td> #>    <td style=\"text-align:right;\"> 3.07 <\/td> #>    <td style=\"text-align:right;\"> 3.730 <\/td> #>    <td style=\"text-align:right;\"> 17.60 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 3 <\/td> #>    <td style=\"text-align:right;\"> 3 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Merc 450SLC <\/td> #>    <td style=\"text-align:right;\"> 15.2 <\/td> #>    <td style=\"text-align:right;\"> 8 <\/td> #>    <td style=\"text-align:right;\"> 275.8 <\/td> #>    <td style=\"text-align:right;\"> 180 <\/td> #>    <td style=\"text-align:right;\"> 3.07 <\/td> #>    <td style=\"text-align:right;\"> 3.780 <\/td> #>    <td style=\"text-align:right;\"> 18.00 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 3 <\/td> #>    <td style=\"text-align:right;\"> 3 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Cadillac Fleetwood <\/td> #>    <td style=\"text-align:right;\"> 10.4 <\/td> #>    <td style=\"text-align:right;\"> 8 <\/td> #>    <td style=\"text-align:right;\"> 472.0 <\/td> #>    <td style=\"text-align:right;\"> 205 <\/td> #>    <td style=\"text-align:right;\"> 2.93 <\/td> #>    <td style=\"text-align:right;\"> 5.250 <\/td> #>    <td style=\"text-align:right;\"> 17.98 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 3 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Lincoln Continental <\/td> #>    <td style=\"text-align:right;\"> 10.4 <\/td> #>    <td style=\"text-align:right;\"> 8 <\/td> #>    <td style=\"text-align:right;\"> 460.0 <\/td> #>    <td style=\"text-align:right;\"> 215 <\/td> #>    <td style=\"text-align:right;\"> 3.00 <\/td> #>    <td style=\"text-align:right;\"> 5.424 <\/td> #>    <td style=\"text-align:right;\"> 17.82 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 3 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Chrysler Imperial <\/td> #>    <td style=\"text-align:right;\"> 14.7 <\/td> #>    <td style=\"text-align:right;\"> 8 <\/td> #>    <td style=\"text-align:right;\"> 440.0 <\/td> #>    <td style=\"text-align:right;\"> 230 <\/td> #>    <td style=\"text-align:right;\"> 3.23 <\/td> #>    <td style=\"text-align:right;\"> 5.345 <\/td> #>    <td style=\"text-align:right;\"> 17.42 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 3 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Fiat 128 <\/td> #>    <td style=\"text-align:right;\"> 32.4 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>    <td style=\"text-align:right;\"> 78.7 <\/td> #>    <td style=\"text-align:right;\"> 66 <\/td> #>    <td style=\"text-align:right;\"> 4.08 <\/td> #>    <td style=\"text-align:right;\"> 2.200 <\/td> #>    <td style=\"text-align:right;\"> 19.47 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Honda Civic <\/td> #>    <td style=\"text-align:right;\"> 30.4 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>    <td style=\"text-align:right;\"> 75.7 <\/td> #>    <td style=\"text-align:right;\"> 52 <\/td> #>    <td style=\"text-align:right;\"> 4.93 <\/td> #>    <td style=\"text-align:right;\"> 1.615 <\/td> #>    <td style=\"text-align:right;\"> 18.52 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>    <td style=\"text-align:right;\"> 2 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Toyota Corolla <\/td> #>    <td style=\"text-align:right;\"> 33.9 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>    <td style=\"text-align:right;\"> 71.1 <\/td> #>    <td style=\"text-align:right;\"> 65 <\/td> #>    <td style=\"text-align:right;\"> 4.22 <\/td> #>    <td style=\"text-align:right;\"> 1.835 <\/td> #>    <td style=\"text-align:right;\"> 19.90 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Toyota Corona <\/td> #>    <td style=\"text-align:right;\"> 21.5 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>    <td style=\"text-align:right;\"> 120.1 <\/td> #>    <td style=\"text-align:right;\"> 97 <\/td> #>    <td style=\"text-align:right;\"> 3.70 <\/td> #>    <td style=\"text-align:right;\"> 2.465 <\/td> #>    <td style=\"text-align:right;\"> 20.01 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 3 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Dodge Challenger <\/td> #>    <td style=\"text-align:right;\"> 15.5 <\/td> #>    <td style=\"text-align:right;\"> 8 <\/td> #>    <td style=\"text-align:right;\"> 318.0 <\/td> #>    <td style=\"text-align:right;\"> 150 <\/td> #>    <td style=\"text-align:right;\"> 2.76 <\/td> #>    <td style=\"text-align:right;\"> 3.520 <\/td> #>    <td style=\"text-align:right;\"> 16.87 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 3 <\/td> #>    <td style=\"text-align:right;\"> 2 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> AMC Javelin <\/td> #>    <td style=\"text-align:right;\"> 15.2 <\/td> #>    <td style=\"text-align:right;\"> 8 <\/td> #>    <td style=\"text-align:right;\"> 304.0 <\/td> #>    <td style=\"text-align:right;\"> 150 <\/td> #>    <td style=\"text-align:right;\"> 3.15 <\/td> #>    <td style=\"text-align:right;\"> 3.435 <\/td> #>    <td style=\"text-align:right;\"> 17.30 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 3 <\/td> #>    <td style=\"text-align:right;\"> 2 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Camaro Z28 <\/td> #>    <td style=\"text-align:right;\"> 13.3 <\/td> #>    <td style=\"text-align:right;\"> 8 <\/td> #>    <td style=\"text-align:right;\"> 350.0 <\/td> #>    <td style=\"text-align:right;\"> 245 <\/td> #>    <td style=\"text-align:right;\"> 3.73 <\/td> #>    <td style=\"text-align:right;\"> 3.840 <\/td> #>    <td style=\"text-align:right;\"> 15.41 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 3 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Pontiac Firebird <\/td> #>    <td style=\"text-align:right;\"> 19.2 <\/td> #>    <td style=\"text-align:right;\"> 8 <\/td> #>    <td style=\"text-align:right;\"> 400.0 <\/td> #>    <td style=\"text-align:right;\"> 175 <\/td> #>    <td style=\"text-align:right;\"> 3.08 <\/td> #>    <td style=\"text-align:right;\"> 3.845 <\/td> #>    <td style=\"text-align:right;\"> 17.05 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 3 <\/td> #>    <td style=\"text-align:right;\"> 2 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Fiat X1-9 <\/td> #>    <td style=\"text-align:right;\"> 27.3 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>    <td style=\"text-align:right;\"> 79.0 <\/td> #>    <td style=\"text-align:right;\"> 66 <\/td> #>    <td style=\"text-align:right;\"> 4.08 <\/td> #>    <td style=\"text-align:right;\"> 1.935 <\/td> #>    <td style=\"text-align:right;\"> 18.90 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Porsche 914-2 <\/td> #>    <td style=\"text-align:right;\"> 26.0 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>    <td style=\"text-align:right;\"> 120.3 <\/td> #>    <td style=\"text-align:right;\"> 91 <\/td> #>    <td style=\"text-align:right;\"> 4.43 <\/td> #>    <td style=\"text-align:right;\"> 2.140 <\/td> #>    <td style=\"text-align:right;\"> 16.70 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>    <td style=\"text-align:right;\"> 5 <\/td> #>    <td style=\"text-align:right;\"> 2 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Lotus Europa <\/td> #>    <td style=\"text-align:right;\"> 30.4 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>    <td style=\"text-align:right;\"> 95.1 <\/td> #>    <td style=\"text-align:right;\"> 113 <\/td> #>    <td style=\"text-align:right;\"> 3.77 <\/td> #>    <td style=\"text-align:right;\"> 1.513 <\/td> #>    <td style=\"text-align:right;\"> 16.90 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>    <td style=\"text-align:right;\"> 5 <\/td> #>    <td style=\"text-align:right;\"> 2 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Ford Pantera L <\/td> #>    <td style=\"text-align:right;\"> 15.8 <\/td> #>    <td style=\"text-align:right;\"> 8 <\/td> #>    <td style=\"text-align:right;\"> 351.0 <\/td> #>    <td style=\"text-align:right;\"> 264 <\/td> #>    <td style=\"text-align:right;\"> 4.22 <\/td> #>    <td style=\"text-align:right;\"> 3.170 <\/td> #>    <td style=\"text-align:right;\"> 14.50 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>    <td style=\"text-align:right;\"> 5 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Ferrari Dino <\/td> #>    <td style=\"text-align:right;\"> 19.7 <\/td> #>    <td style=\"text-align:right;\"> 6 <\/td> #>    <td style=\"text-align:right;\"> 145.0 <\/td> #>    <td style=\"text-align:right;\"> 175 <\/td> #>    <td style=\"text-align:right;\"> 3.62 <\/td> #>    <td style=\"text-align:right;\"> 2.770 <\/td> #>    <td style=\"text-align:right;\"> 15.50 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>    <td style=\"text-align:right;\"> 5 <\/td> #>    <td style=\"text-align:right;\"> 6 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Maserati Bora <\/td> #>    <td style=\"text-align:right;\"> 15.0 <\/td> #>    <td style=\"text-align:right;\"> 8 <\/td> #>    <td style=\"text-align:right;\"> 301.0 <\/td> #>    <td style=\"text-align:right;\"> 335 <\/td> #>    <td style=\"text-align:right;\"> 3.54 <\/td> #>    <td style=\"text-align:right;\"> 3.570 <\/td> #>    <td style=\"text-align:right;\"> 14.60 <\/td> #>    <td style=\"text-align:right;\"> 0 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>    <td style=\"text-align:right;\"> 5 <\/td> #>    <td style=\"text-align:right;\"> 8 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Volvo 142E <\/td> #>    <td style=\"text-align:right;\"> 21.4 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>    <td style=\"text-align:right;\"> 121.0 <\/td> #>    <td style=\"text-align:right;\"> 109 <\/td> #>    <td style=\"text-align:right;\"> 4.11 <\/td> #>    <td style=\"text-align:right;\"> 2.780 <\/td> #>    <td style=\"text-align:right;\"> 18.60 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>    <td style=\"text-align:right;\"> 1 <\/td> #>    <td style=\"text-align:right;\"> 4 <\/td> #>    <td style=\"text-align:right;\"> 2 <\/td> #>   <\/tr> #> <\/tbody> #> <\/table>"},{"path":"https://DemographyBasic.github.io/reference/DemBas_read_px2.html","id":null,"dir":"Reference","previous_headings":"","what":"DemBas_read_px2 — DemBas_read_px2","title":"DemBas_read_px2 — DemBas_read_px2","text":"read file px (INE, Eurostat, etc) return data.frame","code":""},{"path":"https://DemographyBasic.github.io/reference/DemBas_read_px2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DemBas_read_px2 — DemBas_read_px2","text":"","code":"DemBas_read_px2(   filename,   encoding = NULL,   na.strings = c(\"\\\".\\\"\", \"\\\"..\\\"\", \"\\\"...\\\"\", \"\\\"....\\\"\", \"\\\":\\\"\") )"},{"path":"https://DemographyBasic.github.io/reference/DemBas_read_px2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DemBas_read_px2 — DemBas_read_px2","text":"filename  encoding  na.strings","code":""},{"path":"https://DemographyBasic.github.io/reference/DemBas_read_px2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DemBas_read_px2 — DemBas_read_px2","text":"data.frame","code":""},{"path":"https://DemographyBasic.github.io/reference/DemBas_read_px2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DemBas_read_px2 — DemBas_read_px2","text":"","code":"# example code # Importing a .px file example_data_px <- DemBas_read_px2(system.file(\"examples/56940.px\", package = \"DemographyBasic\")) head(example_data_px) #>                Periodo  Sexo Comunidades.y.ciudades.autónomas      Edad.simple #> 1   1 de enero de 2023 Total                   Total Nacional Todas las edades #> 2 1 de octubre de 2022 Total                   Total Nacional Todas las edades #> 3   1 de julio de 2022 Total                   Total Nacional Todas las edades #> 4   1 de abril de 2022 Total                   Total Nacional Todas las edades #> 5   1 de enero de 2022 Total                   Total Nacional Todas las edades #> 6 1 de octubre de 2021 Total                   Total Nacional Todas las edades #>      value #> 1 48085361 #> 2 47940295 #> 3 47781354 #> 4 47609145 #> 5 47486727 #> 6 47424595"},{"path":"https://DemographyBasic.github.io/reference/DemBas_tablavida2.html","id":null,"dir":"Reference","previous_headings":"","what":"Calcula la tabla de vida para edades simples o completa — DemBas_tablavida2","title":"Calcula la tabla de vida para edades simples o completa — DemBas_tablavida2","text":"Calcula la tabla de vida partir de las tasas de mortalidad para edades simples: 0,1,2,...","code":""},{"path":"https://DemographyBasic.github.io/reference/DemBas_tablavida2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calcula la tabla de vida para edades simples o completa — DemBas_tablavida2","text":"","code":"DemBas_tablavida2(mx)"},{"path":"https://DemographyBasic.github.io/reference/DemBas_tablavida2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calcula la tabla de vida para edades simples o completa — DemBas_tablavida2","text":"mx vector de tasas de mortalidad para edades simples: 0,1,2,...","code":""},{"path":"https://DemographyBasic.github.io/reference/DemBas_tablavida2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calcula la tabla de vida para edades simples o completa — DemBas_tablavida2","text":"devuelve un data.frame con la tabla de vida","code":""},{"path":"https://DemographyBasic.github.io/reference/DemBas_tablavida2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calcula la tabla de vida para edades simples o completa — DemBas_tablavida2","text":"","code":"Mx1000 = c(9.12160, 0.84807,0.49502,0.33352,0.27296, 0.23258,0.20229,0.19221,0.19225,0.18219, 0.18219,0.18223,0.19239,0.21268,0.25325, 0.31411,0.38518,0.44618,0.47682,0.48721, 0.48744,0.48768,0.48792,0.48816,0.48840, 0.48864,0.49907,0.49932,0.49957,0.51002, 0.52049,0.55140,0.58236,0.62360,0.67515, 0.72681,0.79907,0.89203,0.99549,1.09927, 1.22398,1.35944,1.50578,1.68380,1.87305, 2.07374,2.28609,2.52075,2.76762,3.04801, 3.34149,3.64844,3.99052,4.35799,4.76231, 5.19386,5.68611,6.20842,6.79514,7.42672, 8.12774,8.89053,9.74129,10.68500,11.73947, 12.91226,14.22468,15.71228,17.35403,19.16595, 21.20612,23.43628,25.96366,28.83038,32.10259, 35.83456,40.09691,44.96477,50.47392,56.71130, 63.73696,71.61161,80.38833,90.15169,100.87032, 112.56462,125.25733,138.92967,153.57492,169.22923, 185.87183,203.41806,222.05303,241.69867,262.24030, 283.83279,306.41026,329.80973,354.16667,379.65616, 406.15058,434.57189,462.12121,491.86992,832.50000) mx = Mx1000/1000 tb01 = DemBas_tablavida(mx) #> Error in DemBas_tablavida(mx): could not find function \"DemBas_tablavida\" tb01 #> Error: object 'tb01' not found"},{"path":"https://DemographyBasic.github.io/reference/DemBas_tablavida_abreviada.html","id":null,"dir":"Reference","previous_headings":"","what":"Calcula la tabla de vida para edades agrupadas — DemBas_tablavida_abreviada","title":"Calcula la tabla de vida para edades agrupadas — DemBas_tablavida_abreviada","text":"Calcula la tabla de vida abreviada partir de las tasas de mortalidad para edades agrupadas: 0,1,2,...","code":""},{"path":"https://DemographyBasic.github.io/reference/DemBas_tablavida_abreviada.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calcula la tabla de vida para edades agrupadas — DemBas_tablavida_abreviada","text":"","code":"DemBas_tablavida_abreviada(nMx, l0 = 1e+05, redondeo = TRUE)"},{"path":"https://DemographyBasic.github.io/reference/DemBas_tablavida_abreviada.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calcula la tabla de vida para edades agrupadas — DemBas_tablavida_abreviada","text":"mx vector de tasas de mortalidad para edades simples: 0,1,2,...","code":""},{"path":"https://DemographyBasic.github.io/reference/DemBas_tablavida_abreviada.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calcula la tabla de vida para edades agrupadas — DemBas_tablavida_abreviada","text":"devuelve un data.frame con la tabla de vida","code":""},{"path":"https://DemographyBasic.github.io/reference/DemBas_tablavida_abreviada.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calcula la tabla de vida para edades agrupadas — DemBas_tablavida_abreviada","text":"","code":"(mx0 = 1733/441881) # TMI = D^t_0/N^t  #> [1] 0.00392187 # Defunciones de menores de un año durante 2003: 1733 # Nacimientos en España en 2003: 441881 mx = c(mx0,0.00027, 0.00013, 0.00016, 0.00043, 0.00057, 0.00059, 0.00081,      0.00115, 0.00174, 0.00258, 0.00376, 0.00569, 0.00818, 0.01346,      0.02206, 0.03844, 0.06981, 0.12872, 0.21674, 0.31705, 0.48258) tv = DemBas_tablavida_abreviada(mx)"},{"path":"https://DemographyBasic.github.io/reference/DemBas_tablavida_abreviada2.html","id":null,"dir":"Reference","previous_headings":"","what":"Calcula la tabla de vida para edades agrupadas — DemBas_tablavida_abreviada2","title":"Calcula la tabla de vida para edades agrupadas — DemBas_tablavida_abreviada2","text":"Calcula la tabla de vida abreviada partir de las tasas de mortalidad para edades agrupadas: 0,1,2,...","code":""},{"path":"https://DemographyBasic.github.io/reference/DemBas_tablavida_abreviada2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calcula la tabla de vida para edades agrupadas — DemBas_tablavida_abreviada2","text":"","code":"DemBas_tablavida_abreviada2(mx)"},{"path":"https://DemographyBasic.github.io/reference/DemBas_tablavida_abreviada2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calcula la tabla de vida para edades agrupadas — DemBas_tablavida_abreviada2","text":"mx vector de tasas de mortalidad para edades simples: 0,1,2,...","code":""},{"path":"https://DemographyBasic.github.io/reference/DemBas_tablavida_abreviada2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calcula la tabla de vida para edades agrupadas — DemBas_tablavida_abreviada2","text":"devuelve un data.frame con la tabla de vida","code":""},{"path":"https://DemographyBasic.github.io/reference/DemBas_tablavida_abreviada2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calcula la tabla de vida para edades agrupadas — DemBas_tablavida_abreviada2","text":"","code":"(mx0 = 1733/441881) # TMI = D^t_0/N^t  #> [1] 0.00392187 # Defunciones de menores de un año durante 2003: 1733 # Nacimientos en España en 2003: 441881 mx = c(mx0,0.00027, 0.00013, 0.00016, 0.00043, 0.00057, 0.00059, 0.00081,      0.00115, 0.00174, 0.00258, 0.00376, 0.00569, 0.00818, 0.01346,      0.02206, 0.03844, 0.06981, 0.12872, 0.21674, 0.31705, 0.48258) tv = DemBas_tablavida_abreviada2(mx)"},{"path":"https://DemographyBasic.github.io/reference/DemBas_tablavida_completa.html","id":null,"dir":"Reference","previous_headings":"","what":"Calcula la tabla de vida para edades simples o completa — DemBas_tablavida_completa","title":"Calcula la tabla de vida para edades simples o completa — DemBas_tablavida_completa","text":"Calcula la tabla de vida partir de las tasas de mortalidad para edades simples: 0,1,2,...","code":""},{"path":"https://DemographyBasic.github.io/reference/DemBas_tablavida_completa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calcula la tabla de vida para edades simples o completa — DemBas_tablavida_completa","text":"","code":"DemBas_tablavida_completa(Mx, l0 = 1e+05, redondeo = TRUE)"},{"path":"https://DemographyBasic.github.io/reference/DemBas_tablavida_completa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calcula la tabla de vida para edades simples o completa — DemBas_tablavida_completa","text":"mx vector de tasas de mortalidad para edades simples: 0,1,2,...","code":""},{"path":"https://DemographyBasic.github.io/reference/DemBas_tablavida_completa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calcula la tabla de vida para edades simples o completa — DemBas_tablavida_completa","text":"devuelve un data.frame con la tabla de vida","code":""},{"path":"https://DemographyBasic.github.io/reference/DemBas_tablavida_completa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calcula la tabla de vida para edades simples o completa — DemBas_tablavida_completa","text":"","code":"Mx1000 = c(9.12160, 0.84807,0.49502,0.33352,0.27296, 0.23258,0.20229,0.19221,0.19225,0.18219, 0.18219,0.18223,0.19239,0.21268,0.25325, 0.31411,0.38518,0.44618,0.47682,0.48721, 0.48744,0.48768,0.48792,0.48816,0.48840, 0.48864,0.49907,0.49932,0.49957,0.51002, 0.52049,0.55140,0.58236,0.62360,0.67515, 0.72681,0.79907,0.89203,0.99549,1.09927, 1.22398,1.35944,1.50578,1.68380,1.87305, 2.07374,2.28609,2.52075,2.76762,3.04801, 3.34149,3.64844,3.99052,4.35799,4.76231, 5.19386,5.68611,6.20842,6.79514,7.42672, 8.12774,8.89053,9.74129,10.68500,11.73947, 12.91226,14.22468,15.71228,17.35403,19.16595, 21.20612,23.43628,25.96366,28.83038,32.10259, 35.83456,40.09691,44.96477,50.47392,56.71130, 63.73696,71.61161,80.38833,90.15169,100.87032, 112.56462,125.25733,138.92967,153.57492,169.22923, 185.87183,203.41806,222.05303,241.69867,262.24030, 283.83279,306.41026,329.80973,354.16667,379.65616, 406.15058,434.57189,462.12121,491.86992,832.50000) mx = Mx1000/1000 tb01 = DemBas_tablavida_completa(mx) tb01 #> # A tibble: 105 × 10 #>    Edad  Mx1000      qx    px     lx    dx    Lx      Tx    ex    Sx #>    <chr>  <dbl>   <dbl> <dbl>  <dbl> <dbl> <dbl>   <dbl> <dbl> <dbl> #>  1 0      9.12  0.00908 0.991 100000   908 99364 7826402  78.3 0.997 #>  2 1      0.848 0.00085 0.999  99092    84 99042 7727038  78.0 0.999 #>  3 2      0.495 0.00049 1.00   99008    49 98983 7627996  77.0 1.00  #>  4 3      0.334 0.00033 1.00   98959    33 98942 7529013  76.1 1.00  #>  5 4      0.273 0.00027 1.00   98926    27 98912 7430070  75.1 1.00  #>  6 5      0.233 0.00023 1.00   98899    23 98887 7331158  74.1 1.00  #>  7 6      0.202 0.0002  1.00   98876    20 98866 7232270  73.1 1.00  #>  8 7      0.192 0.00019 1.00   98856    19 98846 7133404  72.2 1.00  #>  9 8      0.192 0.00019 1.00   98837    19 98827 7034558  71.2 1.00  #> 10 9      0.182 0.00018 1.00   98818    18 98809 6935730  70.2 1.00  #> # ℹ 95 more rows"}]
